{"version":3,"sources":["PollItem.js","SubmitPromptDialog.js","CurrentPoll.js","PastScp.js","Navigation.js","About.js","favicon.ico","ButtonAppBar.js","App.js","reportWebVitals.js","index.js"],"names":["PoolItem","props","state","n_votes","votes","hasClicked","n","fetch","toString","Math","floor","random","this","setState","Grid","item","xs","sm","md","Card","CardContent","Badge","bg","scpClass","prompt","CardActions","Button","size","onClick","handleClick","idx","disabled","Component","UserForm","useState","starting_value","value","setValue","type","name","fullWidth","maxlength","onChange","event","target","startsWith","onValueChange","ClassSelect","React","setScpClass","InputLabel","id","Select","labelId","onClassChange","MenuItem","FormDialog","open","setOpen","setPrompt","handleClose","variant","color","Dialog","maxWidth","onClose","DialogTitle","DialogContent","DialogContentText","curscp","console","log","DialogActions","url","substring","PollList","items","pollingItems","sort","a","b","map","PollItem","index","className","container","spacing","LastSCP","lastSCP","setLastSCP","useEffect","then","res","text","data","dangerouslySetInnerHTML","__html","CurrentPoll","setPollingItems","setCurscp","json","poll","Accordion","Item","Body","getScp","file","ListScp","scpList","undefined","scp","eventKey","Header","class","desc","ReadRawGithub","scp_list","setScpList","str","list_scp","readString","length","pop","i","push","withRouter","to","location","pathname","About","style","textAlign","backgroundColor","href","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","title","MyCoundown","time","Date","now","duree","date","daysInHours","ButtonAppBar","setTime","parseInt","classes","AppBar","position","Toolbar","display","alignItems","src","logo","Typography","App","path","exact","component","PastScp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69845a77.chunk.js","sourcesContent":["import {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport \"./CurrentPoll.css\";\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nclass PoolItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            n_votes: props.votes,\r\n            hasClicked: false\r\n        };\r\n    }      \r\n\r\n    handleClick(n) {\r\n        fetch('https://thisscpdoesnotexist.pythonanywhere.com/vote/?n=' + n.toString()  + '&ip=' + Math.floor(Math.random() * 10000).toString());\r\n        this.setState(state => ({ n_votes: state.n_votes + 1, hasClicked: true}));\r\n    }\r\n\r\n    render() {\r\n        return(\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                  <Card>\r\n                      <CardContent>\r\n      \r\n                          <Badge bg={this.props.scpClass === \"Keter\" ? \"danger\" : this.props.scpClass === \"Euclid\" ? \"warning\" : this.props.scpClass === \"Thaumiel\" ? \"dark\" : \"success\" }>\r\n                              {/*<Typography className={classes.title} color=\"textSecondary\" gutterBottom>*/}\r\n                                  {this.props.scpClass}\r\n                              {/*</Typography>*/}\r\n                          </Badge>\r\n                          <br />\r\n                          <br/>\r\n                          {this.props.prompt}\r\n      \r\n                          <CardActions>\r\n                            {/* \r\n                            <button type=\"button\" size=\"small\" class=\"btn btn-secondary\" onClick={() => this.handleClick(this.props.idx)}>\r\n                                Vote <span class=\"badge badge-success\">{this.state.n_votes}</span>\r\n                            </button>\r\n                            */}\r\n\r\n                            <Button size=\"small\" onClick={() => this.handleClick(this.props.idx)} disabled={this.state.hasClicked}>\r\n                                  <strong>Vote &nbsp;</strong> {this.state.n_votes}\r\n                            </Button>\r\n                          </CardActions>\r\n                      </CardContent>\r\n                  </Card>\r\n              </Grid>\r\n          );\r\n    }\r\n}\r\n\r\nexport default PoolItem;","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nfunction UserForm(props){\n    // Champ de texte qui commencera toujours par la valeur de son prop starting_value\n    const [value, setValue] = useState(props.starting_value);\n    return  <textarea type=\"text\" name=\"user_prompt\" value={value} fullWidth maxlength={300}\n\n        onChange={event => {\n            if (event.target.value.startsWith(props.starting_value)){\n                setValue(event.target.value);\n                props.onValueChange(event);\n            }\n        }}\n    />;\n}\n\n\nfunction ClassSelect(props) {\n    const [scpClass, setScpClass] = React.useState(props.value);\n\n    const handleChange = (event) => {\n        setScpClass(event.target.value);\n        props.onClassChange(event);\n    };\n\n    return (\n        <div>\n            <InputLabel id=\"scpClassLabel\">Classe</InputLabel>\n                <Select\n                  labelId=\"SCP-Class\"\n                  id=\"scpClassSelect\"\n                  value={scpClass}\n                  onChange={handleChange}\n                >\n                  <MenuItem value={0}>Safe</MenuItem>\n                  <MenuItem value={1}>Euclide</MenuItem>\n                  <MenuItem value={2}>Keter</MenuItem>\n                  <MenuItem value={3}>Thomiel</MenuItem>\n            </Select>\n        </div>\n    )\n\n}\n\n\nexport default function FormDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const [prompt, setPrompt] = React.useState(\"\");\n  const [scpClass, setScpClass] = React.useState(0);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () =>{\n      let url = \"https://thisscpdoesnotexist.pythonanywhere.com/add_prompt/?prompt=\" + prompt.substring(11) + \"&class=\" + scpClass.toString() + \"&ip=\" + Math.floor(Math.random() * 100).toString()\n        fetch(url);\n      console.log(\"fetched\");\n\n      handleClose();\n\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n        <h5>Submit a prompt</h5>\n      </Button>\n      <Dialog fullWidth maxWidth=\"sm\" open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Submit your SCP idea !</DialogTitle>\n        <DialogContent>\n\n          <DialogContentText>\n            Describe your SCP :\n          </DialogContentText>\n            <UserForm starting_value={\"SCP-\" + props.curscp + \" is \"} onValueChange={(event) =>{\n                setPrompt(event.target.value);\n            }} />\n\n            <br/>\n            <br/>\n\n            <ClassSelect onClassChange={(event) => {\n                console.log(event.target.value);\n                setScpClass( event.target.value);\n            }}\n                         value={scpClass}\n            />\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","\nimport {useEffect, useState} from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport \"./CurrentPoll.css\";\nimport PollItem from './PollItem.js'\nimport {Accordion} from 'react-bootstrap';\n\nimport SubmitPromptDialog from './SubmitPromptDialog';\n\nfunction PollList(props){\n    const sorted = props.pollingItems.sort(((a, b) => b.votes - a.votes));    \n    \n    const items = sorted.map((item) => <PollItem prompt={item.prompt}\n                                    scpClass={item.scpClass}\n                                    votes={item.votes}\n                                    idx={item.index}\n    />);\n\n    return(\n        <div className=\"poll-list\">\n            <Grid container spacing={3}>\n                {items}\n            </Grid>\n        </div>\n    )\n}\n\nfunction LastSCP() {\n    const [lastSCP, setLastSCP] = useState(\"\");\n\n    console.log(\"coucou\");\n\n    useEffect(() => {\n        fetch(\"https://thisscpdoesnotexist.pythonanywhere.com/last_scp_desc/\")\n            .then((res) => res.text())\n            .then((data) =>{\n                setLastSCP(data);\n            })\n    }, []);\n\n    return (\n        <div dangerouslySetInnerHTML={{__html: lastSCP}}/>\n    );\n}\n\nfunction CurrentPoll() {\n\n    const [pollingItems, setPollingItems] = useState([]);\n    const [curscp, setCurscp] = useState(\"\");\n\n    useEffect(() => {\n        let cur_url = 'https://thisscpdoesnotexist.pythonanywhere.com/get_poll/';\n        fetch(cur_url)\n            .then((res) => res.json())\n            .then((data) => {\n                setPollingItems(data.poll);\n            })\n\n        fetch(\"https://thisscpdoesnotexist.pythonanywhere.com/current_scp_number/\")\n            .then((res) => res.json())\n            .then((data) =>{\n                setCurscp(data);\n            })\n\n    }, []);\n\n    return (\n    <div className=\"CurrentPoll\">\n        <strong>Current Poll :</strong>\n        <br/>\n        <br/>\n\n        <PollList pollingItems={pollingItems}/>\n        <br/>\n        <br/>\n        <SubmitPromptDialog className=\"openDialogBtn\" curscp ={curscp} />\n        <br/>\n        <br/>\n\n        <strong>Last SCP :</strong>\n        <br/>\n        <br/>\n        <Accordion.Item>\n            <Accordion.Body>\n                <LastSCP/>\n            </Accordion.Body>\n        </Accordion.Item>\n    </div>\n  );\n}\n\nexport default CurrentPoll;\n","import './App.css';\nimport {useEffect, useState} from \"react\";\n// import  {pastScps} from './scpData';\nimport {Accordion} from 'react-bootstrap';\nimport { readString } from 'react-papaparse';\nimport Badge from 'react-bootstrap/Badge';\n\nlet scp_url = \"https://raw.githubusercontent.com/thisscpdoesnotexist/SCP-GPT_db/master/\"\n\nfunction getScp(file) {\n    let cur_url = scp_url + file\n    return fetch(cur_url)\n        .then((res) => {return res.text()})\n        .then((data) => {return data});\n}\n\nfunction ListScp(scpList){\n    if(scpList.data === undefined){\n        return \"Loading...\";\n    }\n\n    const listPastScp = scpList.data.map((scp, index) =>\n        <Accordion.Item eventKey={index.toString()}>\n            <Accordion.Header>\n                <strong>{scp.prompt} &nbsp;</strong>\n                <Badge bg={scp.class === \"Keter\" ? \"danger\" : scp.class === \"Euclid\" ? \"warning\" : \"success\" }>\n                    {scp.class}\n                </Badge>\n                </Accordion.Header>\n            <Accordion.Body>\n                <div dangerouslySetInnerHTML={{__html: scp.desc}}/>;\n            </Accordion.Body>\n        </Accordion.Item>\n    )\n\n    return listPastScp;\n}\n\nfunction ReadRawGithub() {\n    const [scp_list, setScpList] = useState([]);\n\n    useEffect(async function fun() {\n        let str = await getScp(\"scp_list.csv\");\n        let list_scp = readString(str);\n\n        if(list_scp.data[list_scp.data.length - 1].length != 3){\n            list_scp.data.pop();\n        }\n\n        let scp = [];\n        for(var i = 0; i < list_scp.data.length; i++) {\n            scp.push(\n                {\n                    prompt: list_scp.data[i][0],\n                    class: list_scp.data[i][1],\n                    desc: await(getScp(list_scp.data[i][2]))\n                }\n            );\n        }\n\n        setScpList(scp);\n    }, []);\n\n    return (\n        <div className=\"ReadRawGithub\">\n\n            <h2> List of Past SCPs</h2>\n\n            <Accordion>\n                <ListScp data={scp_list} />\n            </Accordion>\n\n        </div>\n    )\n}\n\nexport default ReadRawGithub;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction Navigation(props) {\n  return (\n    <div className=\"navigation\">\n      <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n        <div class=\"container\">\n          <Link class=\"navbar-brand\" to=\"/\">\n            This SCP Does Not Exist !\n          </Link>\n\n          <div>\n            <ul class=\"navbar-nav ml-auto\">\n              <li\n                class={`nav-item  ${\n                  props.location.pathname === \"/\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/\">\n                  Poll\n                </Link>\n              </li>\n              <li\n                class={`nav-item  ${\n                  props.location.pathname === \"/list\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/list\">\n                  List SCPs\n                </Link>\n              </li>\n              <li\n                class={`nav-item  ${\n                  props.location.pathname === \"/about\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/about\">\n                  About\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default withRouter(Navigation);","\nimport Footer from \"./Footer\";\n\nfunction About() {\n  return (\n    <div className=\"App\" style={{textAlign: 'left', backgroundColor:'white' }}>\n      <h2>Authors</h2>\n\n        <ul>\n            <li>Ruben Grès</li>\n            <ul>\n                <li> Looking for a datascientist job in Germany</li>\n                <li>\n                    <a href={\"https://www.linkedin.com/in/ruben-gres-484930158/\"}>LinkedIn</a>\n                </li>\n            </ul>\n            <br/>\n            <li>Philippe Saadé</li>\n            <ul>\n                <li> Looking for a phd in Western Europe</li>\n                <li>\n                    <a href={\"https://www.linkedin.com/in/philippe-saad%C3%A9-26972b149/\"}>LinkedIn</a>\n                </li>\n            </ul>\n        </ul>\n    </div>\n  );\n}\n\nexport default About;\n","export default __webpack_public_path__ + \"static/media/favicon.9f756375.ico\";","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport {Link} from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Countdown from \"react-countdown\";\nimport logo from './favicon.ico'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n\nfunction MyCoundown(props){\n\n\n\n    console.log( (props.time - Date.now() ) );\n\n//         <div>\n//         <h1><Countdown date={Date.now() + (props.time - Date.now())  } /></h1>\n// </div>\n        console.log(Date.now());\n        console.log(props.time);\n\n        const duree = props.time - Date.now()\n    console.log(duree);\n\n    return (<h2>\n{/*        <Timer*/}\n{/*    initialTime={ duree }*/}\n{/*    // initialTime={3600*1000}*/}\n{/*    direction=\"backward\"*/}\n{/*    timeToUpdate={1000}*/}\n{/*>*/}\n{/*    {() => (*/}\n{/*        <React.Fragment>*/}\n{/*            <Timer.Minutes /> : <Timer.Seconds />*/}\n{/*            /!*<Timer.Milliseconds /> milliseconds*!/*/}\n{/*        </React.Fragment>*/}\n{/*    )}*/}\n{/*</Timer>*/}\n{/*                    <h1><Countdown date={Date.now() + (3600 * 1000)  } key={\"MyTimer\"} /></h1>*/}\n                    <h1 ><Countdown date={props.time  } key={\"MyTimer\"} daysInHours={true}/></h1>\n\n\n        </h2>\n    )\n}\n\nexport default function ButtonAppBar() {\n    const [time, setTime] = useState(Date.now() + 3600 * 1000);\n\n    useEffect(() => {\n        let cur_url = 'https://thisscpdoesnotexist.pythonanywhere.com/next_time/';\n        fetch(cur_url)\n            .then((res) => res.text())\n            .then((data) => {\n                console.log(data);\n                setTime(parseInt(data));\n            })}, []\n    );\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/*<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">*/}\n          {/*  <MenuIcon />*/}\n          {/*</IconButton>*/}\n\n            <Grid container spacing={1} style={{display: \"flex\", alignItems: \"center\"}}>\n\n                <Grid item xs={12} sm={4} >\n                    <img src={logo} />\n                    <Button color=\"inherit\">\n                      <Typography variant=\"h6\" className={classes.title}>\n                          This SCP Does Not Exist\n                      </Typography>\n                  </Button>\n\n                </Grid>\n                \n                <Grid item xs={12} sm={4} >\n                    {/*<h1><CountDown epoch={parseInt(time)}/> </h1>*/}\n                    <MyCoundown time ={time}/>\n                </Grid>\n                <Grid item xs={0}  sm={1} > </Grid>\n                <Grid item xs={12}  sm={1} >\n                    <Link to={'/'}>\n                          <Button color=\"inherit\">\n                              {/*<Typography variant=\"h6\" className={classes.title}>*/}\n                              <strong >Poll</strong>\n                              {/*</Typography>*/}\n                          </Button>\n                        </Link>\n                </Grid>\n\n                <Grid item xs={12} sm={1}>\n                    <Link to={'/list'}>\n\n                  <Button color=\"inherit\">\n                      {/*<Typography variant=\"h6\" className={classes.title}>*/}\n                      <strong>Archives</strong>\n                      {/*</Typography>*/}\n                  </Button>\n                    </Link>\n                </Grid>\n                <Grid item xs={12}  sm={1}>\n                <Link to={'/about'}>\n                  <Button color=\"inherit\">\n                      {/*<Typography variant=\"h6\" className={classes.title}>*/}\n                      <strong>About</strong>\n                      {/*</Typography>*/}\n                  </Button>\n                </Link>\n                </Grid>\n            </Grid>\n\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import './App.css';\nimport CurrentPoll from './CurrentPoll.js'\nimport PastScp from './PastScp.js'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./customStyle.css\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navigation from \"./Navigation\";\nimport About from \"./About\";\nimport ButtonAppBar from \"./ButtonAppBar\";\n\nfunction App() {\n  return (\n      <div className=\"App\">\n      <Router>\n        <ButtonAppBar />\n        <br/>\n        <Switch>\n          <Route path=\"/\" exact component={ CurrentPoll} />\n          <Route path=\"/list\" exact component={ PastScp } />\n          <Route path=\"/about\" exact component={ About } />\n          {/* Fix for 404 on refresh */}\n          <Route path=\"/*\" exact component={ CurrentPoll } />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}