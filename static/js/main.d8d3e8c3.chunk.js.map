{"version":3,"sources":["SubmitPromptDialog.js","CurrentPoll.js","scpData.js","PastScp.js","Navigation.js","About.js","Footer.js","ButtonAppBar.js","App.js","reportWebVitals.js","index.js"],"names":["UserForm","props","useState","starting_value","value","setValue","type","name","fullWidth","onChange","event","target","startsWith","ClassSelect","React","scpClass","setScpClass","InputLabel","id","Select","labelId","MenuItem","FormDialog","open","setOpen","handleClose","Button","variant","color","onClick","Dialog","maxWidth","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","useStyles","makeStyles","root","title","fontSize","Card","marginBottom","PollItem","classes","Grid","item","xs","sm","md","className","CardContent","Badge","bg","prompt","CardActions","size","votes","PollList","items","pollingItems","map","container","spacing","CurrentPoll","pastScps","text","PastScp","console","log","listPastScp","scp","index","Accordion","Item","eventKey","toString","Header","Body","dangerouslySetInnerHTML","__html","withRouter","class","to","location","pathname","About","Footer","theme","flexGrow","menuButton","marginRight","ButtonAppBar","AppBar","position","Toolbar","Typography","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8d3e8c3.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nfunction UserForm(props){\n    // Champ de texte qui commencera toujours par la valeur de son prop starting_value\n    const [value, setValue] = useState(props.starting_value);\n    return  <textarea type=\"text\" name=\"user_prompt\" value={value} fullWidth\n\n        onChange={event => {\n            if (event.target.value.startsWith(props.starting_value)){\n                setValue(event.target.value);\n            }\n        }}\n    />;\n}\n\n\nfunction ClassSelect() {\n    const [scpClass, setScpClass] = React.useState(0);\n\n    const handleChange = (event) => {\n        setScpClass(event.target.value);\n    };\n\n    return (\n        <div>\n            <InputLabel id=\"demo-simple-select-label\">Classe</InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={scpClass}\n                  onChange={handleChange}\n                >\n                  <MenuItem value={0}>Safe</MenuItem>\n                  <MenuItem value={1}>Euclide</MenuItem>\n                  <MenuItem value={2}>Keter</MenuItem>\n                  <MenuItem value={3}>Thomiel</MenuItem>\n            </Select>\n        </div>\n    )\n\n}\n\n\nexport default function FormDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen} fullWidth>\n        <h3>Submit a prompt !</h3>\n      </Button>\n      <Dialog fullWidth maxWidth=\"sm\" open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Submit your SCP idea !</DialogTitle>\n        <DialogContent>\n\n          <DialogContentText>\n            Describe your SCP :\n          </DialogContentText>\n            <UserForm starting_value=\"SCP 104 is \" />\n\n            <br/>\n            <br/>\n\n            <ClassSelect />\n\n\n\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","\nimport {useState} from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport \"./CurrentPoll.css\";\nimport Badge from 'react-bootstrap/Badge';\n\nimport SubmitPromptDialog from './SubmitPromptDialog';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 500,\n  },\n  title: {\n    fontSize: 14,\n  },\n    Card:{\n      marginBottom: \"-50%\"\n    },\n    //\n    // Keter:{\n    //   backgroundColor: \"#ffaaa7\"\n    // },\n    // Euclid:{\n    //   backgroundColor:\"#ffd3b4\"\n    // },\n    // Safe:{\n    //   backgroundColor:\"#d5ecc2\"\n    // }\n\n\n\n});\n\n\nfunction PollItem(props){\n    const classes = useStyles();\n    let gridclass = classes.root + ' ' + props.scpClass;\n\n    return(\n      // <div className=\"pollItem\">\n      //     <p>{props.prompt} ({props.scpClass}) <button>Vote ({props.votes})</button></p>\n      // </div>\n\n        <Grid item xs={12} sm={6} md={3}>\n            <Card className={classes.root}>\n                <CardContent>\n\n                    <Badge bg={props.scpClass == \"Keter\" ? \"danger\" : props.scpClass == \"Euclid\" ? \"warning\" : \"success\" }>\n                        {/*<Typography className={classes.title} color=\"textSecondary\" gutterBottom>*/}\n                            {props.scpClass}\n                        {/*</Typography>*/}\n                    </Badge>\n                    <br />\n                    <br/>\n                    {props.prompt}\n\n                    <CardActions>\n                        <Button size=\"small\"><strong>Votes !</strong> ({props.votes})</Button>\n                    </CardActions>\n                </CardContent>\n            </Card>\n        </Grid>\n\n\n    );\n}\n\nfunction PollList(props){\n    //props : pollingItems : [{prompt : .., votes : ..}, ...]\n    // Should already be sorted by votes ascending\n    const items = props.pollingItems.map(item => <PollItem prompt={item.prompt}\n                                                           scpClass={item.scpClass}\n                                                           votes={item.votes}\n\n    />);\n    return(\n        <div className=\"poll-list\">\n            <Grid container spacing={3}>\n                {items}\n            </Grid>\n        </div>\n    )\n}\n\n\nfunction CurrentPoll() {\n    const pollingItems = [\n        {\n            prompt : \"SCP 202-GPT is a pink pig being the best Minecraft player\",\n            scpClass : \"Keter\",\n            votes  : 54\n        },\n        {\n            prompt : \"SCP 202-GPT is a black panther that fight for racial justice\",\n            scpClass : 'Euclid',\n            votes  : 24\n        },\n        {\n            prompt : \"SCP 202-GPT is a pink burger that can turn people vegan\",\n            scpClass: 'Safe',\n            votes  : 12\n        },\n                {\n            prompt : \"SCP 202-GPT is a pink pig being the best Minecraft player\",\n            scpClass : \"Keter\",\n            votes  : 54\n        },\n        {\n            prompt : \"SCP 202-GPT is a black panther that fight for racial justice\",\n            scpClass : 'Euclid',\n            votes  : 24\n        },\n        {\n            prompt : \"SCP 202-GPT is a pink burger that can turn people vegan\",\n            scpClass: 'Safe',\n            votes  : 12\n        },\n                {\n            prompt : \"SCP 202-GPT is a pink pig being the best Minecraft player\",\n            scpClass : \"Keter\",\n            votes  : 54\n        },\n        {\n            prompt : \"SCP 202-GPT is a black panther that fight for racial justice\",\n            scpClass : 'Euclid',\n            votes  : 24\n        },\n        {\n            prompt : \"SCP 202-GPT is a pink burger that can turn people vegan\",\n            scpClass: 'Safe',\n            votes  : 12\n        },\n                {\n            prompt : \"SCP 202-GPT is a pink pig being the best Minecraft player\",\n            scpClass : \"Keter\",\n            votes  : 54\n        },\n        {\n            prompt : \"SCP 202-GPT is a black panther that fight for racial justice\",\n            scpClass : 'Euclid',\n            votes  : 24\n        },\n        {\n            prompt : \"SCP 202-GPT is a pink burger that can turn people vegan\",\n            scpClass: 'Safe',\n            votes  : 12\n        }\n    ];\n  return (\n    <div className=\"CurrentPoll\">\n\n        <strong>Current Poll :</strong>\n        <br/>\n        <br/>\n\n        <PollList pollingItems={pollingItems}/>\n        <br/>\n        <br/>\n        <SubmitPromptDialog className=\"openDialogBtn\" />\n\n    </div>\n  );\n}\n\nexport default CurrentPoll;\n","export let pastScps = [\n    {\n        prompt : \"SCP 101-GPT is a lantern that can absorb light\",\n        scpClass : \"Safe\",\n        text : \"Item #: SCP-864-GPT<br>\" +\n            \"<br>\" +\n            \"Object Class: Safe<br>\" +\n            \"<br>\" +\n            \"Special Containment Procedures: SCP-864-GPT is to be kept in a secure safe on Site-██. Two instances of SCP-864-GPT are allowed for testing on D-Class personnel. At no time should any personnel attempt to transport SCP-864-GPT into SCP-864.<br>\" +\n            \"<br>\" +\n            \"Description: SCP-864-GPT is a ████████ brand yo-yo measuring approximately 2.5 inches long. SCP-864-GPT appears to possess an electromagnetically charged frame, allowing it to be attracted to and repelled from metallic surfaces. SCP-864-GPT's anomalous properties only manifest when it is in contact with a human subject.<br>\" +\n            \"<br>\" +\n            \"When in contact with a human subject, SCP-864-GPT will begin to rapidly spin. The rate of rotation will increase to the point at which the human subject appears to be suspended in mid air. Subjects will remain suspended in this position for approximately 10 minutes, after which time they will begin to fall to the ground. However, before the subject is able to make contact with the ground, the yo-yo will return to them, causing them to float in the air again.<br>\" +\n            \"<br>\" +\n            \"The subject will remain suspended in this state for an indefinite period of time. Should the subject be forced from the surface that SCP-864-GPT is touching, or if they touch the ground, the yo-yo will once again return to them, restarting the process. Should SCP-864-GPT touch any other surface, it will be immediately repelled from the subject, causing them to fall to the ground.<br>\" +\n            \"<br>\" +\n            \"Discovery: SCP-864-GPT was discovered in the possession of a 16 year old male, ████ ██████, who was found in a similar state, floating in the air. ████ ██████ was later determined to have been missing for approximately 3 months, and was found within the boundaries of SCP-████, which was believed to have been the point of origin for SCP-864-GPT.<br>\" +\n            \"<br>\" +\n            \"Addendum: ████ ██████ later claimed that he was forced to continually play with SCP-864-GPT by an unknown individual, who threatened to harm his family if he did not comply. ████ ██████ was subsequently given a class-A amnestic, and the location of the individual who threatened him remains unknown.\"\n    },\n\n    {\n        prompt : \"SCP 102-GPT is a blind woman that was able to kill anything on sight\",\n        scpClass : \"Euclid\",\n        text : \"Item #: SCP-932-GPT<br>\" +\n            \"<br>\" +\n            \"Object Class: Safe<br>\" +\n            \"<br>\" +\n            \"Special Containment Procedures:<br>\" +\n            \"<br>\" +\n            \"<br>\" +\n            \"SCP-932-GPT is to be contained in a standard humanoid containment cell. SCP-932-GPT is to be monitored at all time via closed circuit camera. In the event of SCP-932-GPT demonstrating any anomalous behaviour, it is to be preformed on by D-class personnel until its effects wear off. Any personnel who have been affected by SCP-932's anomalous properties are not allowed to return to active duty for a period of no less than one year.<br>\" +\n            \"<br>\" +\n            \"<br>\" +\n            \"Description:<br>\" +\n            \"<br>\" +\n            \"SCP-932-GPT is a Caucasian male, approximately 30 years of age, named ████████ ██████████. SCP-932-GPT has the ability to make other people believe that they are him, regardless of whether or not they are aware of their condition. This ability manifests itself in humans as an attachment to SCP-932-GPT's body in which they slowly become more and more like it. The speed at which this process takes place is dependent on the number of individuals affected; however, it has been observed that there is a minimum amount of people needed for the effect to take place<br>\" +\n            \"<br>\" +\n            \"Discovery: SCP-932-GPT was brought to the attention of the Foundation after a series of disappearances in ████████, USA. SCP-932-GPT was found after a police raid on a suspected drug den. SCP-932-GPT was arrested on charges of drug trafficking, but escaped during transport and fled into the nearby woods.<br>\" +\n            \"<br>\" +\n            \"SCP-932-GPT made its way to [REDACTED], where it lived as an hermit for nearly 6 years before it was apprehended by local law enforcement officers and placed in custody.<br>\" +\n            \"<br>\" +\n            \"SCP-932's anomaly was discovered when it attempted to commit suicide by cop. SCP-932-GPT was found on a rooftop of an apartment complex and surrounded by police officers in full riot gear, brandishing assault rifles. SCP-932-GPT was shot once and fell from the roof to the street, where it died instantly.<br>\" +\n            \"<br>\" +\n            \"SCP-932's anomalous properties were discovered when the officers who shot SCP-932-GPT began to believe that they were him. They were placed under quarantine and questioned regarding their beliefs, after which they believed that they were indeed ████████ ██████████. However, upon further questioning they could not remember details of their lives prior to becoming SCP-932-GPT.<br>\" +\n            \"<br>\" +\n            \"Subjects affected by SCP-932's anomalous properties do not seem to be able to remember details of their life before becoming SCP-932 as long as they are affected. When questioned about their previous life the subjects will become agitated and will refer to themselves as ████████ ██████████ until further notice.<br>\" +\n            \"<br>\" +\n            \"Discovery: SCP-932-GPT was revealed after a series of disappearances in ████████, USA. SCP-932-GPT was found after a police raid on a suspected drug den. SCP-932 escaped during transport and fled into the nearby woods.<br>\" +\n            \"<br>\" +\n            \"SCP-932 made its way to [REDACTED], where it lived as an hermit for nearly 6 years before it was apprehended by local law enforcement officers and placed in custody. After being sentenced to life imprisonment in ███████ Maximum Security Prison, SCP-932 committed suicide by hanging himself with his bedsheets. An autopsy revealed that SCP-932 had been dead for several days prior to the execution of its plan.<br>\" +\n            \"<br>\" +\n            \"Addendum: SCP-932-GPT's cell is to be monitored at all times via closed circuit camera. In the event of SCP-932-GPT demonstrating any anomalous behaviour, it is to be preformed on by D-class personnel until its effects wear off. Any personnel who have been affected by SCP-932's anomalous properties are not allowed to return to active duty for a period of no less than one year.<br>\" +\n            \"<br>\" +\n            \"SCP-932 is currently being held in Site ██'s Humanoid Containment Cell Wing. Any personnel who enter SCP-932's containment cell are required to wear full hazmat gear and a respirator.<br>\" +\n            \"<br>\" +\n            \"Addendum 2: The following is a conversation between ████████ and SCP-932-GPT, recorded by security personnel on assignment at Site ██.<br>\" +\n            \"<br>\" +\n            \"████████: So what's your deal, ████████? Got a bad attitude or something?<br>\" +\n            \"SCP-932-GPT: Fuck you. I'm the last person that needs to justify what I do.<br>\" +\n            \"████████: Well, I don't care if you think you're better than me, but if you wanna live another day in this place, then you better realize who the fuck I am.<br>\" +\n            \"SCP-932-GPT: Who am I? Really? Who am I? Hah! That's fucking rich!<br>\" +\n            \"████████: Come on man, don't play dumb with me! You know damn well who I am!<br>\" +\n            \"SCP-932-GPT: No I don't. And neither do you!<br>\" +\n            \"<br>\" +\n            \"████████ paused for several moments and began to visibly shake before leaving the room.<br>\" +\n            \"<br>\" +\n            \"<br>\" +\n            \"Scp-image-caption: SCP-932-GPT's cell<br>\" +\n            \"the image shows a screen resolution of 1920x1080 at a size of 466kb, the image is shown as a still picture from the security camera. The picture shows SCP-932 sitting on its bunk in its containment cell. SCP-932 is wearing a white jumpsuit and has its hands folded across its chest. Its head is tilted down and its mouth is open, revealing several large, rotting teeth. It appears to be muttering to itself.\"\n    },\n    {\n        prompt : \"SCP 103-GPT is a demie god able to do anything he want for one minute per month\",\n        scpClass : \"Safe\",\n        text : \"Item #: SCP-987-GPT<br>\" +\n            \"<br>\" +\n            \"Object Class: Euclid<br>\" +\n            \"<br>\" +\n            \"Special Containment Procedures: 그리고, the perimeter of the area of effect is to be patrolled by a minimum of 20 guards at all times. All individuals approaching SCP-987-GPT are to be apprehended and given Class-C amnestics. All individuals attempting to enter SCP-987-GPT are to be apprehended, given Class-C amnestics, and detained in the nearest Foundation facility. Any attempts to enter SCP-987-GPT by unauthorized personnel are to be met with lethal force.<br>\" +\n            \"<br>\" +\n            \"Description: SCP-987-GPT is a small warehouse located in ████████, New Jersey. The anomalous property of SCP-987-GPT manifests upon the entrance of any living human beings within a 6.4 meter radius. Upon entrance, all living human beings within the radius experience a complete loss of memory of all persons present within the radius, including themselves. Subjects also experience a complete loss of any and all knowledge pertaining to their identities, their names, their places of birth, their jobs, their families, their friends, and all other personal and familial information. Subjects will now identify themselves as \\\"Thomas Smith\\\", but will not be able to provide any information as to who Thomas Smith is, or how they know this.<br>\" +\n            \"<br>\" +\n            \"After 15 minutes inside the radius of SCP-987-GPT, all subjects will experience a complete loss of all memories they had before accessing SCP-987-GPT. All subjects will still identify themselves as \\\"Thomas Smith\\\", but will not be able to provide any information as to who Thomas Smith is, or how they know this.<br>\" +\n            \"<br>\" +\n            \"Discovery: SCP-987-GPT was discovered by Mobile Task Force Omicron-12 (\\\"Artie's Angels\\\") in ████ after numerous reports of individuals experiencing the effects of SCP-987-GPT were reported.<br>\" +\n            \"<br>\" +\n            \"Addendum 987-G: SCP-987-GPT was used by one instance of SCP-096 during it's containment breach on ██/██/████. SCP-096 was not detected until it had already killed ██ personnel. SCP-096 was apprehended by MTF Omicron-12 and successfully contained after a brief struggle. SCP-096 was successfully transported to Site ██, where it was successfully contained.<br>\" +\n            \"<br>\" +\n            \"Addendum: SCP-987-GPT was not used by any instances of SCP-096 during the containment breach of SCP-682, which occurred on ██/██/████. SCP-096 and SCP-682 were both successfully contained by MTF Omicron-12.\"\n    },\n];\n","import './App.css';\nimport {useEffect, useState} from \"react\";\nimport  {pastScps} from './scpData';\nimport {Accordion} from 'react-bootstrap';\n\nfunction PastScp() {\n\n    console.log(pastScps);\n\n    const [scps, setScps] = useState(null);\n\n\n    // WARNING, use dangerouslySetInnerHTML, may be unsafe\n\n    // const listPastScp = pastScps.map((scp, index) =>\n    //     <Accordion.Item eventKey={index.toString()}>\n    //         <Accordion.Header>{scp.prompt}</Accordion.Header>\n    //         <Accordion.Body><div dangerouslySetInnerHTML={{__html: scp.text}} /></Accordion.Body>\n    //     </Accordion.Item>\n    // );\n    const listPastScp = pastScps.map((scp, index) =>\n            <Accordion.Item eventKey={index.toString()}>\n                <Accordion.Header><strong>{scp.prompt}</strong></Accordion.Header>\n                <Accordion.Body><div dangerouslySetInnerHTML={{__html: scp.text}} /></Accordion.Body>\n            </Accordion.Item>\n    );\nconsole.log('aaaaaaaaaaa');\nconsole.log(listPastScp);\n\n\n\n    // useEffect(() => {\n    // getData();\n    // we will use async/await to fetch this data\n  //   function getData() {\n  //     const response = fetch(\"http://localhost:5000/all_scp/\")\n  //         .then(response => {\n  //             if (response.ok()) {\n  //                 console.log(\"ok\");\n  //                 return response.json();\n  //             }\n  //         })\n  //         .then(data => {\n  //             setScps(data);\n  //         })\n  //\n  //\n  //   }\n  // }, []); // <- you may need to put the setBooks function in this array\n    // console.log(scps)\n\n  return (\n    <div className=\"PastScp\">\n\n        <h2> List of Past SCPs</h2>\n\n        <Accordion>\n            {listPastScp}\n        </Accordion>\n\n    </div>\n  )\n}\n\nexport default PastScp;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction Navigation(props) {\n  return (\n    <div className=\"navigation\">\n      <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n        <div class=\"container\">\n          <Link class=\"navbar-brand\" to=\"/\">\n            This SCP Does Not Exist !\n          </Link>\n\n          <div>\n            <ul class=\"navbar-nav ml-auto\">\n              <li\n                class={`nav-item  ${\n                  props.location.pathname === \"/\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/\">\n                  Poll\n                </Link>\n              </li>\n              <li\n                class={`nav-item  ${\n                  props.location.pathname === \"/list\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/list\">\n                  List SCPs\n                </Link>\n              </li>\n              <li\n                class={`nav-item  ${\n                  props.location.pathname === \"/about\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/about\">\n                  About\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default withRouter(Navigation);","\nfunction About() {\n  return (\n    <div className=\"App\">\n      Made using the power of GPT-3\n    </div>\n  );\n}\n\nexport default About;\n","\nfunction Footer() {\n  return (\n    <div className=\"Footer navbar fixed-bottom\">\n      Made by Retronyme and Filouface\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {Link} from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/*<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">*/}\n          {/*  <MenuIcon />*/}\n          {/*</IconButton>*/}\n\n            <Grid container spacing={3}>\n\n                <Grid item xs={12} sm={3}>\n\n                    <Button color=\"inherit\">\n                      <Typography variant=\"h5\" className={classes.title}>\n                          This SCP Does Not Exist !\n                      </Typography>\n                  </Button>\n                </Grid>\n                \n                <Grid item sm={5}></Grid>\n                \n                <Grid item xs={12}  sm={1}>\n                    <Link to={'/'}>\n                  <Button color=\"inherit\">\n                      {/*<Typography variant=\"h6\" className={classes.title}>*/}\n                      <strong>Poll</strong>\n                      {/*</Typography>*/}\n                  </Button>\n                        </Link>\n                </Grid>\n\n                <Grid item xs={12} sm={1}>\n                    <Link to={'/list'}>\n\n                  <Button color=\"inherit\">\n                      {/*<Typography variant=\"h6\" className={classes.title}>*/}\n                      <strong>Past SCPs</strong>\n                      {/*</Typography>*/}\n                  </Button>\n                    </Link>\n                </Grid>\n                <Grid item xs={12}  sm={1}>\n                <Link to={'/about'}>\n                  <Button color=\"inherit\">\n                      {/*<Typography variant=\"h6\" className={classes.title}>*/}\n                      <strong>About</strong>\n                      {/*</Typography>*/}\n                  </Button>\n                </Link>\n                </Grid>\n            </Grid>\n\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import './App.css';\nimport CurrentPoll from './CurrentPoll.js'\nimport PastScp from './PastScp.js'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./customStyle.css\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navigation from \"./Navigation\";\nimport About from \"./About\";\nimport Footer from \"./Footer\";\nimport ButtonAppBar from \"./ButtonAppBar\";\n\nfunction App() {\n  return (\n    // <div className=\"App\">\n    //\n    //   <CurrentPoll />\n    //     <PastScp/>\n    //\n    // </div>\n\n      <div className=\"App\">\n      <Router>\n        <ButtonAppBar />\n        <br/>\n        <Switch>\n          <Route path=\"/\" exact component={() => <CurrentPoll />} />\n          <Route path=\"/list\" exact component={() => <PastScp />} />\n          <Route path=\"/about\" exact component={() => <About />} />\n        </Switch>\n        <Footer/>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}