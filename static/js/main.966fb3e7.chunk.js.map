{"version":3,"sources":["PollItem.js","SubmitPromptDialog.js","CurrentPoll.js","Collapsible.js","AccordionDyn.js","PastScp.js","About.js","favicon.ico","ButtonAppBar/ButtonAppBar.js","App.js","reportWebVitals.js","index.js"],"names":["PoolItem","props","useState","Date","now","time","setTime","n_votes","votes","hasClicked","ls","get","idx","state","setState","useEffect","fetch","then","res","text","data","parseInt","set","Grid","item","xs","sm","md","Card","className","CardContent","Badge","bg","scpClass","prompt","CardActions","style","display","justifyContent","Button","size","onClick","n","toString","Math","floor","random","ttl","disabled","color","fontStyle","author","UserForm","starting_value","value","setValue","type","name","fullWidth","maxlength","onChange","event","target","startsWith","onValueChange","ClassSelect","React","setScpClass","InputLabel","id","Select","labelId","onClassChange","MenuItem","FormDialog","open","setOpen","setPrompt","setAuthor","nsfw","setNsfw","handleClose","Dialog","maxWidth","onClose","DialogTitle","DialogContent","DialogContentText","curscp","Switch","console","log","checked","placeholder","DialogActions","url","substring","window","location","href","PollList","items","pollingItems","sort","a","b","map","PollItem","index","undefined","container","spacing","LastSCP","lastSCP","setLastSCP","dangerouslySetInnerHTML","__html","CurrentPoll","setPollingItems","setCurscp","needupdate","setNeedUpdate","json","poll","Accordion","Item","Body","ANIMATED_EASING_PREFIXES","Collapsible","contentHandle","_handleRef","ref","_handleLayoutChange","contentHeight","nativeEvent","layout","height","animating","collapsed","measuring","measured","Animated","Value","collapsedHeight","prevProps","this","_componentDidUpdate","unmounted","_toggleCollapsed","callback","requestAnimationFrame","measure","getNode","x","y","width","_transitionToHeight","_measureContent","duration","easing","prefix","found","i","length","substr","toLowerCase","Easing","Error","_animation","stop","timing","useNativeDriver","toValue","start","onAnimationEnd","enablePointerEvents","renderChildrenCollapsed","overflow","contentStyle","position","opacity","align","transform","translateY","interpolate","inputRange","outputRange","shouldRenderChildren","View","pointerEvents","onLayout","children","Component","defaultProps","COLLAPSIBLE_PROPS","AccordionDyn","_renderContainer","section","key","renderCollapsible","activeSections","sectionContainerStyle","expandFromBottom","sections","underlayColor","touchableProps","Touchable","touchableComponent","renderHeader","renderFooter","renderSectionTitle","includes","onPress","_toggleSection","accessibilityState","expanded","expandMultiple","updatedSections","filter","containerStyle","renderContent","renderAsFlatList","keyExtractor","restProps","viewProps","collapsibleProps","Object","keys","forEach","FlatList","extraData","nestedScrollEnabled","renderItem","TouchableHighlight","getScp","file","PastScp","multipleSelect","content","setSections","loadContent","j","desc","_","isActive","textAlign","class","paddingLeft","paddingRight","backgroundColor","n_upvotes","getAccodionHeader","padding","str","list_scp","readString","upvotes_count","pop","scp","push","bind","About","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","title","fontFamily","MyCoundown","date","daysInHours","ButtonAppBar","classes","AppBar","Toolbar","alignItems","src","logo","Typography","variant","to","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.966fb3e7.chunk.js","sourcesContent":["import {Component, useEffect, useState} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport \"./CurrentPoll.css\";\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport ls from 'localstorage-slim';\r\n\r\n\r\n\r\n\r\n\r\nfunction PoolItem(props) {\r\n\r\n\r\n    const [time, setTime]   = useState(Date.now() + 3600 * 1000);\r\n    const [state, setState] = useState({\r\n        n_votes: props.votes,\r\n        hasClicked: ls.get(props.idx) === null ? false : true\r\n    });\r\n\r\n    // get next time to know cookie ttl\r\n    useEffect(() => {\r\n        let cur_url = 'https://thisscpdoesnotexist.pythonanywhere.com/next_time/';\r\n        fetch(cur_url)\r\n            .then((res) => res.text())\r\n            .then((data) => {\r\n                setTime(parseInt(data) - Date.now());\r\n            })}, []\r\n);\r\n\r\n        ls.set('current_poll_votes');\r\n\r\n\r\n\r\n        function handleClick(n) {\r\n            fetch('https://thisscpdoesnotexist.pythonanywhere.com/vote/?n=' + n.toString()  + '&ip=' + Math.floor(Math.random() * 10000).toString());\r\n            setState(state => ({ n_votes: state.n_votes + 1, hasClicked: true}));\r\n            ls.set(n, true, {ttl : time});\r\n        }\r\n\r\n        return(\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                  <Card className=\"pollitemparent\">\r\n                      <CardContent className=\"pollitem\">\r\n\r\n                          <Badge bg={props.scpClass === \"Keter\" ? \"danger\" : props.scpClass === \"Euclid\" ? \"warning\" : props.scpClass === \"Thaumiel\" ? \"primary\" : \"success\" }>\r\n                              {/*<Typography className={classes.title} color=\"textSecondary\" gutterBottom>*/}\r\n                                  {props.scpClass}\r\n                              {/*</Typography>*/}\r\n                          </Badge>\r\n                          <br />\r\n                          <br/>\r\n                          {props.prompt}\r\n\r\n                          <CardActions style={{display: \"flex\", justifyContent:\"space-between\"}}>\r\n                            <Button size=\"small\" onClick={() => handleClick(props.idx)} disabled={state.hasClicked}>\r\n                                  <strong>Vote &nbsp;</strong> {state.n_votes}\r\n                            </Button>\r\n\r\n                            <div style={{color: \"grey\", fontStyle: \"italic\"}}>{props.author}</div>\r\n                          </CardActions>\r\n                      </CardContent>\r\n                  </Card>\r\n              </Grid>\r\n          );\r\n    \r\n}\r\n\r\nexport default PoolItem;","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport {Switch} from \"@material-ui/core\";\n\n\nfunction UserForm(props){\n    // Champ de texte qui commencera toujours par la valeur de son prop starting_value\n    const [value, setValue] = useState(props.starting_value);\n    return  <textarea type=\"text\" name=\"user_prompt\" value={value} fullWidth maxlength={300}\n\n        onChange={event => {\n            if (event.target.value.startsWith(props.starting_value)){\n                setValue(event.target.value);\n                props.onValueChange(event);\n            }\n        }}\n    />;\n}\n\n\nfunction ClassSelect(props) {\n    const [scpClass, setScpClass] = React.useState(props.value);\n\n    const handleChange = (event) => {\n        setScpClass(event.target.value);\n        props.onClassChange(event);\n    };\n\n    return (\n        <div>\n            <InputLabel id=\"scpClassLabel\">Class :</InputLabel>\n                <Select\n                  labelId=\"SCP-Class\"\n                  id=\"scpClassSelect\"\n                  value={scpClass}\n                  onChange={handleChange}\n                >\n                  <MenuItem value={0}>Safe</MenuItem>\n                  <MenuItem value={1}>Euclid</MenuItem>\n                  <MenuItem value={2}>Keter</MenuItem>\n                  <MenuItem value={3}>Thomiel</MenuItem>\n            </Select>\n        </div>\n    )\n\n}\n\n\nexport default function FormDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const [prompt, setPrompt] = React.useState(\"\");\n  const [scpClass, setScpClass] = React.useState(0);\n  const [author, setAuthor] = React.useState(\"Dr. [REDACTED]\");\n  const [nsfw, setNsfw] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () =>{\n      let url = \"https://thisscpdoesnotexist.pythonanywhere.com/add_prompt/\"\n      + \"?prompt=\" + prompt.substring(11)\n      + \"&class=\" + scpClass.toString()\n      + \"&ip=\" + Math.floor(Math.random() * 100).toString()\n      + \"&author=\" + author\n      + \"&nswf=\" + nsfw;\n\n      fetch(url).then(value => window.location.href = '/');\n\n      handleClose();\n\n  };\n\n  return (\n    <div>\n      <div className=\"buttonsubmit\" onClick={handleClickOpen}>\n        <h5>Submit a prompt</h5>\n      </div>\n      <Dialog fullWidth maxWidth=\"sm\" open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Submit your SCP idea !</DialogTitle>\n        <DialogContent>\n\n          <DialogContentText>\n            Describe your SCP :\n          </DialogContentText>\n            <UserForm starting_value={\"SCP-\" + props.curscp + \" is \"} onValueChange={(event) =>{\n                setPrompt(event.target.value);\n            }} />\n\n            <br/>\n            <br/>\n\n            <div style={{display: \"flex\", justifyContent:\"space-between\"}}>\n            \n              <ClassSelect onClassChange={(event) => {\n                setScpClass( event.target.value);\n                }} value={scpClass}\n              />\n                <InputLabel id=\"scpNSFW\">\n                  NSFW:\n                  <Switch  onChange={(event => {\n                      console.log(event.target.checked);\n                      setNsfw(event.target.checked);\n                  })}/>\n                </InputLabel>\n                \n              <div>\n                <InputLabel id=\"scpClassLabel\">Author :</InputLabel>\n                <input name=\"Author\" placeholder=\"Dr. [REDACTED]\" onChange={(event) =>{\n                          setAuthor(event.target.value);\n                      }}></input>\n              </div>\n\n            </div>\n\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" >\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","\nimport {useEffect, useState} from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport \"./CurrentPoll.css\";\nimport PollItem from './PollItem.js';\nimport {Accordion} from 'react-bootstrap';\n\nimport SubmitPromptDialog from './SubmitPromptDialog';\n\nfunction PollList(props){\n    const sorted = props.pollingItems.sort(((a, b) => b.votes - a.votes));    \n    \n    const items = sorted.map((item) => <PollItem\n                                    prompt={item.prompt}\n                                    scpClass={item.scpClass}\n                                    votes={item.votes}\n                                    idx={item.index}\n                                    author={(item.author !== undefined) ? item.author : 'Dr. [REDACTED]'}\n    />);\n\n    return(\n        <div className=\"poll-list\">\n            <Grid container spacing={3}>\n                {items}\n            </Grid>\n        </div>\n    )\n}\n\nfunction LastSCP() {\n    const [lastSCP, setLastSCP] = useState(\"\");\n\n    useEffect(() => {\n        fetch(\"https://thisscpdoesnotexist.pythonanywhere.com/last_scp_desc/\")\n            .then((res) => res.text())\n            .then((data) =>{\n                setLastSCP(data);\n            })\n    }, []);\n\n    return (\n        <div dangerouslySetInnerHTML={{__html: lastSCP}}/>\n    );\n}\n\nfunction CurrentPoll() {\n\n    const [pollingItems, setPollingItems] = useState([]);\n    const [curscp, setCurscp] = useState(\"\");\n\n    const [needupdate, setNeedUpdate] = useState(0);\n\n    useEffect(() => {\n        let cur_url = 'https://thisscpdoesnotexist.pythonanywhere.com/get_poll/';\n        fetch(cur_url)\n            .then((res) => res.json())\n            .then((data) => {\n                setPollingItems(data.poll);\n            })\n\n        fetch(\"https://thisscpdoesnotexist.pythonanywhere.com/current_scp_number/\")\n            .then((res) => res.json())\n            .then((data) =>{\n                setCurscp(data);\n            })\n\n    }, [needupdate]);\n\n    return (\n    <div>\n\n        <div className=\"presentation\">\n            <h2> What is this website ? </h2>\n            <p>\n                This website uses artifical intelligence to generate customs SCP from a simple prompt.\n                Every hour the prompt with the most votes is chosen to create a new SCP. Previous SCPs can be found in the <a href=\"./list\"> archives</a>.\n                You can vote for your favorite SCP or submit your own description on the poll <a href=\"./poll\"> here</a>.\n\n                <br/>\n                If you're still  lost please check out our <a href=\"./about\">FAQ</a>.\n            </p>\n        </div>\n\n        <br></br>\n\n        <h3><b>Current Poll :</b></h3>\n        <div className=\"pollwrapper\">\n            <br/>\n            <PollList pollingItems={pollingItems} />\n\n            <SubmitPromptDialog className=\"openDialogBtn\" curscp ={curscp} needupdate={setNeedUpdate}/>\n        </div>\n        <br/><br/>\n\n        <h3><b>Last SCP :</b></h3>\n            <Accordion.Item className=\"scpcont\">\n                <Accordion.Body>\n                    <LastSCP/>\n                </Accordion.Body>\n            </Accordion.Item>\n    </div>\n  );\n}\n\nexport default CurrentPoll;\n","import React, { Component } from 'react';\r\nimport { Animated, Easing } from 'react-native';\r\n\r\nconst ANIMATED_EASING_PREFIXES = ['easeInOut', 'easeOut', 'easeIn'];\r\n\r\nexport default class Collapsible extends Component {\r\n  static defaultProps = {\r\n    align: 'top',\r\n    collapsed: true,\r\n    collapsedHeight: 0,\r\n    enablePointerEvents: false,\r\n    duration: 300,\r\n    easing: 'easeOutCubic',\r\n    onAnimationEnd: () => null,\r\n    renderChildrenCollapsed: true,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      measuring: false,\r\n      measured: false,\r\n      height: new Animated.Value(props.collapsedHeight),\r\n      contentHeight: 0,\r\n      animating: false,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.collapsed !== this.props.collapsed) {\r\n      this.setState({ measured: false }, () =>\r\n        this._componentDidUpdate(prevProps)\r\n      );\r\n    } else {\r\n      this._componentDidUpdate(prevProps);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unmounted = true;\r\n  }\r\n\r\n  _componentDidUpdate(prevProps) {\r\n    if (prevProps.collapsed !== this.props.collapsed) {\r\n      this._toggleCollapsed(this.props.collapsed);\r\n    } else if (\r\n      this.props.collapsed &&\r\n      prevProps.collapsedHeight !== this.props.collapsedHeight\r\n    ) {\r\n      this.state.height.setValue(this.props.collapsedHeight);\r\n    }\r\n  }\r\n\r\n  contentHandle = null;\r\n\r\n  _handleRef = (ref) => {\r\n    this.contentHandle = ref;\r\n  };\r\n\r\n  _measureContent(callback) {\r\n    this.setState(\r\n      {\r\n        measuring: true,\r\n      },\r\n      () => {\r\n        requestAnimationFrame(() => {\r\n          if (!this.contentHandle) {\r\n            this.setState(\r\n              {\r\n                measuring: false,\r\n              },\r\n              () => callback(this.props.collapsedHeight)\r\n            );\r\n          } else {\r\n            let ref;\r\n            if (typeof this.contentHandle.measure === 'function') {\r\n              ref = this.contentHandle;\r\n            } else {\r\n              ref = this.contentHandle.getNode();\r\n            }\r\n            ref.measure((x, y, width, height) => {\r\n              this.setState(\r\n                {\r\n                  measuring: false,\r\n                  measured: true,\r\n                  contentHeight: height,\r\n                },\r\n                () => callback(height)\r\n              );\r\n            });\r\n          }\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  _toggleCollapsed(collapsed) {\r\n    if (collapsed) {\r\n      this._transitionToHeight(this.props.collapsedHeight);\r\n    } else if (!this.contentHandle) {\r\n      if (this.state.measured) {\r\n        this._transitionToHeight(this.state.contentHeight);\r\n      }\r\n      return;\r\n    } else {\r\n      this._measureContent((contentHeight) => {\r\n        this._transitionToHeight(contentHeight);\r\n      });\r\n    }\r\n  }\r\n\r\n  _transitionToHeight(height) {\r\n    const { duration } = this.props;\r\n    let easing = this.props.easing;\r\n    if (typeof easing === 'string') {\r\n      let prefix;\r\n      let found = false;\r\n      for (let i = 0; i < ANIMATED_EASING_PREFIXES.length; i++) {\r\n        prefix = ANIMATED_EASING_PREFIXES[i];\r\n        if (easing.substr(0, prefix.length) === prefix) {\r\n          easing =\r\n            easing.substr(prefix.length, 1).toLowerCase() +\r\n            easing.substr(prefix.length + 1);\r\n          prefix = prefix.substr(4, 1).toLowerCase() + prefix.substr(5);\r\n          easing = Easing[prefix](Easing[easing || 'ease']);\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!found) {\r\n        easing = Easing[easing];\r\n      }\r\n      if (!easing) {\r\n        throw new Error('Invalid easing type \"' + this.props.easing + '\"');\r\n      }\r\n    }\r\n\r\n    if (this._animation) {\r\n      this._animation.stop();\r\n    }\r\n    this.setState({ animating: true });\r\n    this._animation = Animated.timing(this.state.height, {\r\n      useNativeDriver: false,\r\n      toValue: height ? height : 0,\r\n      duration,\r\n      easing,\r\n    }).start(() => {\r\n      if (this.unmounted) {\r\n        return;\r\n      }\r\n      this.setState({ animating: false }, () => {\r\n        if (this.unmounted) {\r\n          return;\r\n        }\r\n        this.props.onAnimationEnd();\r\n      });\r\n    });\r\n  }\r\n\r\n  _handleLayoutChange = (event) => {\r\n    const contentHeight = event.nativeEvent.layout.height;\r\n    if (\r\n      this.state.animating ||\r\n      this.props.collapsed ||\r\n      this.state.measuring ||\r\n      this.state.contentHeight === contentHeight\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.state.height.setValue(contentHeight);\r\n    this.setState({ contentHeight });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      collapsed,\r\n      enablePointerEvents,\r\n      renderChildrenCollapsed,\r\n    } = this.props;\r\n    const {\r\n      height,\r\n      contentHeight,\r\n      measuring,\r\n      measured,\r\n      animating,\r\n    } = this.state;\r\n    const hasKnownHeight = !measuring && (measured || collapsed);\r\n    const style = hasKnownHeight && {\r\n      overflow: 'hidden',\r\n      height: height,\r\n    };\r\n    const contentStyle = {};\r\n    if (measuring) {\r\n      contentStyle.position = 'absolute';\r\n      contentStyle.opacity = 0;\r\n    } else if (this.props.align === 'center') {\r\n      contentStyle.transform = [\r\n        {\r\n          translateY: height.interpolate({\r\n            inputRange: [0, contentHeight],\r\n            outputRange: [contentHeight / -2, 0],\r\n          }),\r\n        },\r\n      ];\r\n    } else if (this.props.align === 'bottom') {\r\n      contentStyle.transform = [\r\n        {\r\n          translateY: height.interpolate({\r\n            inputRange: [0, contentHeight],\r\n            outputRange: [-contentHeight, 0],\r\n          }),\r\n        },\r\n      ];\r\n    }\r\n    if (animating) {\r\n      contentStyle.height = contentHeight;\r\n    }\r\n    const shouldRenderChildren =\r\n      renderChildrenCollapsed ||\r\n      ((!collapsed || (collapsed && animating)) &&\r\n        (animating || measuring || measured));\r\n\r\n    return (\r\n      <Animated.View\r\n        style={style}\r\n        pointerEvents={!enablePointerEvents && collapsed ? 'none' : 'auto'}\r\n      >\r\n        <Animated.View\r\n          ref={this._handleRef}\r\n          style={[this.props.style, contentStyle]}\r\n          onLayout={this.state.animating ? undefined : this._handleLayoutChange}\r\n        >\r\n          {shouldRenderChildren && this.props.children}\r\n        </Animated.View>\r\n      </Animated.View>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { View, TouchableHighlight, FlatList } from 'react-native';\r\nimport Collapsible from './Collapsible';\r\n\r\nconst COLLAPSIBLE_PROPS = [\r\n  'align',\r\n  'collapsed',\r\n  'collapsedHeight',\r\n  'renderChildrenCollapsed',\r\n  'enablePointerEvents',\r\n  'duration',\r\n  'easing',\r\n  'style',\r\n  'onAnimationEnd',\r\n];\r\n\r\nexport default class AccordionDyn extends Component {\r\n  static defaultProps = {\r\n    underlayColor: 'black',\r\n    disabled: false,\r\n    expandFromBottom: false,\r\n    expandMultiple: false,\r\n    touchableComponent: TouchableHighlight,\r\n    keyExtractor: (item, index) => index,\r\n    renderSectionTitle: () => null,\r\n    onAnimationEnd: () => null,\r\n    sectionContainerStyle: {},\r\n    renderAsFlatList: false,\r\n  };\r\n\r\n  _toggleSection(section) {\r\n    if (!this.props.disabled) {\r\n      const { activeSections, expandMultiple, onChange } = this.props;\r\n\r\n      let updatedSections = [];\r\n\r\n      if (activeSections.includes(section)) {\r\n        updatedSections = activeSections.filter((a) => a !== section);\r\n      } else if (expandMultiple) {\r\n        updatedSections = [...activeSections, section];\r\n      } else {\r\n        updatedSections = [section];\r\n      }\r\n\r\n      if (onChange) {\r\n        onChange(updatedSections);\r\n      }\r\n    }\r\n  }\r\n\r\n  _renderContainer = (section, key, renderCollapsible) => {\r\n    const {\r\n      activeSections,\r\n      sectionContainerStyle,\r\n      expandFromBottom,\r\n      sections,\r\n      underlayColor,\r\n      touchableProps,\r\n      touchableComponent: Touchable,\r\n      renderHeader,\r\n      renderFooter,\r\n      renderSectionTitle,\r\n    } = this.props;\r\n    return (\r\n      <View key={key} style={sectionContainerStyle}>\r\n        {renderSectionTitle(section, key, activeSections.includes(key))}\r\n\r\n        {expandFromBottom && renderCollapsible(section, key)}\r\n\r\n        <Touchable\r\n          onPress={() => this._toggleSection(key)}\r\n          underlayColor={underlayColor}\r\n          {...touchableProps}\r\n          accessibilityState={{\r\n            expanded: activeSections.includes(key),\r\n          }}\r\n        >\r\n          {renderHeader(section, key, activeSections.includes(key), sections)}\r\n        </Touchable>\r\n\r\n        {!expandFromBottom && renderCollapsible(section, key)}\r\n\r\n        {renderFooter &&\r\n          renderFooter(section, key, activeSections.includes(key), sections)}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      activeSections,\r\n      expandMultiple,\r\n      onChange,\r\n      containerStyle,\r\n      sectionContainerStyle,\r\n      expandFromBottom,\r\n      sections,\r\n      underlayColor,\r\n      touchableProps,\r\n      touchableComponent: Touchable,\r\n      onAnimationEnd,\r\n      renderContent,\r\n      renderHeader,\r\n      renderFooter,\r\n      renderSectionTitle,\r\n      disabled,\r\n      renderAsFlatList,\r\n      keyExtractor,\r\n      ...restProps\r\n    } = this.props;\r\n\r\n    const viewProps = {};\r\n    const collapsibleProps = {};\r\n\r\n    Object.keys(restProps).forEach((key) => {\r\n      if (COLLAPSIBLE_PROPS.includes(key)) {\r\n        collapsibleProps[key] = restProps[key];\r\n      } else {\r\n        viewProps[key] = restProps[key];\r\n      }\r\n    });\r\n\r\n    const renderCollapsible = (section, key) => (\r\n      <Collapsible\r\n        collapsed={!activeSections.includes(key)}\r\n        {...collapsibleProps}\r\n        onAnimationEnd={() => onAnimationEnd(section, key)}\r\n      >\r\n        {renderContent(section, key, activeSections.includes(key), sections)}\r\n      </Collapsible>\r\n    );\r\n\r\n    if (renderAsFlatList) {\r\n      return (\r\n        <FlatList\r\n          style={containerStyle}\r\n          data={sections}\r\n          extraData={activeSections}\r\n          nestedScrollEnabled={true}\r\n          keyExtractor={keyExtractor}\r\n          renderItem={({ item, index }) => {\r\n            const section = item;\r\n            const key = keyExtractor(item, index);\r\n            return this._renderContainer(section, key, renderCollapsible);\r\n          }}\r\n          {...viewProps}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <View style={containerStyle} {...viewProps}>\r\n        {sections.map((section, index) => {\r\n          const key = keyExtractor(section, index);\r\n          return this._renderContainer(section, key, renderCollapsible);\r\n        })}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport AccordionDyn from './AccordionDyn';\nimport {Accordion} from 'react-bootstrap';\nimport Badge from 'react-bootstrap/Badge';\nimport { readString } from 'react-papaparse'\nimport Button from '@material-ui/core/Button';\nimport { SuitHeart, SuitHeartFill } from 'react-bootstrap-icons';\n\nconst scp_url = \"https://raw.githubusercontent.com/thisscpdoesnotexist/SCP-GPT_db/master/\"\nconst upvotes_url = \"http://thisscpdoesnotexist.pythonanywhere.com/get_upvotes/\"\n\nfunction getScp(file) {\n    let cur_url = scp_url + file\n    return fetch(cur_url)\n        .then((res) => {return res.text()})\n        .then((data) => {return data});\n}\n\nclass PastScp extends Component {\n    state = {\n        activeSections: [],\n        collapsed: true,\n        multipleSelect: false,\n        content: []\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.getAccodionHeader().then((data) => {\n            this.setState({\n                content : data\n            })\n        });\n    }\n\n    setSections = (sections) => {\n        const {content} = this.state\n        this.loadContent(content, sections)\n        this.setState({\n          activeSections: sections.includes(undefined) ? [] : sections,\n        });\n    };\n\n    loadContent = (content, sections) => {\n        for(var i = 0; i < sections.length; i++) {\n            let j = sections[i];\n            getScp(content[j].url).then((data) => {\n                content[j].desc = data;\n                this.setState({content});\n            })\n        }\n    }\n\n    renderHeader = (section, _, isActive) => {\n        return (\n            <div className='accordionheader'>\n                <table style={{width : '100%'}}>\n                    <tr>\n                        <td style={{width:70, textAlign:'center'}}>\n                            <Badge bg={section.class === \"Keter\" ? \"danger\" : section.class === \"Euclid\" ? \"warning\" : \"success\" }>\n                                {section.class}\n                            </Badge>\n                        </td>\n\n                        <td style={{paddingLeft : 5, paddingRight : 5}}>\n                            <strong> SCP-{section.id} is {section.prompt}</strong>\n                            <div style={{color: 'red'}}>\n                                {section.nsfw === \"true\" ? <span>NSFW</span> : null}\n                            </div>\n                        </td>\n\n                        <td style={{textAlign : 'right'}}>\n                            <Button size=\"small\" style={{backgroundColor:'lightgrey'}} disabled={false}>\n                                {section.n_upvotes} &nbsp; <SuitHeart/>                      \n                            </Button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        );\n    };\n\n    renderContent(section, _, isActive) {\n        return (\n            <Accordion.Item className=\"scpcont\">\n                <div style={{padding: '1.5em'}} dangerouslySetInnerHTML={{__html: section.desc}}/>\n            </Accordion.Item>\n        );\n    }\n\n    async getAccodionHeader() {\n        let str = await getScp(\"scp_list.csv\");\n        let list_scp = readString(str);\n\n        let upvotes_count = await fetch(upvotes_url).then((res) => {return res.json()});\n\n        if(list_scp.data[list_scp.data.length - 1].length !== 3){\n            list_scp.data.pop();\n        }\n\n        let scp = [];\n        for(var i = list_scp.data.length - 1; i >= 0; i--) {\n            scp.push(\n                {\n                    id: list_scp.data[i][0],\n                    prompt: list_scp.data[i][1],\n                    class: list_scp.data[i][2],\n                    url: list_scp.data[i][3],\n                    nsfw: list_scp.data[i][4],\n                    n_upvotes: (list_scp.data[i][0] in upvotes_count) ? upvotes_count[list_scp.data[i][0]]['n_upvotes'] : 0,\n                    desc: 'Loading SCP...'\n                }\n            );\n        }\n\n        return scp;\n    }\n\n    render() {\n        return (\n            <div className=\"ListOfSCPs\">\n                <h2> List of Past SCPs</h2>\n\n                <br></br>\n\n                <AccordionDyn\n                    activeSections={this.state.activeSections}\n                    sections={this.state.content}\n                    expandMultiple={this.multipleSelect}\n                    renderHeader={this.renderHeader}\n                    renderContent={this.renderContent}\n                    onChange={this.setSections.bind(this)}\n                    renderAsFlatList={false}\n                />\n            </div>\n        );\n    }\n}\n\nexport default PastScp;","import React, { Component } from 'react';\nimport { ThreeDotsVertical } from 'react-bootstrap-icons';\nimport Badge from 'react-bootstrap/Badge';\n\nfunction About() {\n  return (\n    <div className=\"presentation\">\n      <center><h1>FAQ</h1></center>\n\n    <br></br>\n\n      <h4> What is the SCP foundation ?</h4>\n        <p>\n            The SCP Foundation is an international secret society responsible for capturing and containing various paranormal,\n            supernatural, and other mysterious phenomena unexplained by mainstream science (known as \"anomalies\" or \"SCPs\"),\n            while also keeping their existence hidden from the rest of global human society.\n        \n            <br></br>\n            <br></br>\n\n            They include living beings and creatures, artifacts and objects, locations and places, abstract concepts,\n            and incomprehensible entities which display supernatural abilities or other extremely unusual properties.\n            If left uncontained, many of the more dangerous anomalies will pose a serious threat to humans or even all life on Earth.\n\n            <br></br>\n            <br></br>\n\n            The SCP are divided in different classes depending on its containment difficulty. There are many classes but\n            we're limiting them to:\n\n            <br></br>\n            <br></br>\n\n            <table>\n                <tbody>\n                    <tr>\n                        <td className=\"right\"><Badge bg=\"success\">Safe</Badge></td>\n                        <td className=\"smallpadding\">Anomalies are easily contained.</td>\n                    </tr>\n\n                    <tr>\n                        <td className=\"right\"><Badge bg=\"warning\">Euclid</Badge></td>\n                        <td className=\"smallpadding\">Anomalies require more resources to contain or containment isn't always reliable.</td>\n                    </tr>\n                    \n                    <tr>\n                        <td className=\"right\"><Badge bg=\"danger\">Keter</Badge></td>\n                        <td className=\"smallpadding\">Anomalies are exceedingly difficult to contain.</td>\n                    </tr>\n                    \n                    <tr>\n                        <td className=\"right\"><Badge bg=\"primary\">Thaumiel</Badge></td>\n                        <td className=\"smallpadding\">Anomalies that the Foundation specifically uses to contain other SCPs.</td>\n                    </tr>\n                </tbody>\n            </table>\n        </p>\n\n        <h4> How are the SCP generated ? </h4>\n        <p>\n            The SCPs are generated using GPT-3 by <a href=\"https://openai.com\">OpenAI</a> to generate the SCP. The Generative Pre-trained Transformer 3\n            (GPT-3) is an autoregressive language model that uses deep learning to produce human-like text. GPT-3's full version has a capacity of 175\n            billion machine learning parameters. The quality of the text generated by GPT-3 is so high that it can be difficult to determine whether or\n            not it was written by a human\n        </p>\n\n      <h4> Who are we ?</h4>\n        <p>\n            We are Ruben and Philippe two young passionate data scientist.\n            The SCP Foundation is a common interest and we figured it would be an interesting challenge for GPT-3. If you have any question or suggestion, feel free to send us an email at <a href=\"mailto:thisscpdoesnotexist@gmail.com\">thisscpdoesnotexist@gmail.com</a>.\n            <br></br><br></br>\n            You can also reach us on our social medias:\n        </p>\n\n        <table className=\"socialstable\">\n            <tbody>\n                <tr>\n                    <td>\n                        <b>Ruben Gres</b>\n                        <br/>\n                        <a href={\"https://www.linkedin.com/in/ruben-gres-484930158/\"}>LinkedIn</a>\n                        <br/>\n                        <a href={\"https://github.com/RubenGres\"}>GitHub</a>\n                        <br/>\n                        <a href={\"https://ohmlet.itch.io/\"}>Itch.io</a>\n                    </td>\n                    \n                    <td>\n                        <b>Philippe Saadé</b>\n                        <br/>\n                        <a href={\"https://www.linkedin.com/in/philippe-saad%C3%A9-26972b149/\"}>LinkedIn</a>\n                        <br/>\n                        <a href={\"https://github.com/PhilSad\"}>GitHub</a>\n                        <br/><br/>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n  );\n}\n\nexport default About;\n","export default __webpack_public_path__ + \"static/media/favicon.9f756375.ico\";","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport {Link} from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Countdown from \"react-countdown\";\nimport logo from '../favicon.ico';\nimport \"./ButtonAppBar.css\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    backgroundColor: \"black\"\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: \"BauhausDemi\"\n  },\n}));\n\n\nfunction MyCoundown(props){\n    return (\n      <div>\n        <h1><Countdown date={props.time} key={\"MyTimer\"} daysInHours={true}/></h1>\n      </div>\n    )\n}\n\nexport default function ButtonAppBar() {\n    const [time, setTime] = useState(Date.now() + 3600 * 1000);\n\n    useEffect(() => {\n        let cur_url = 'https://thisscpdoesnotexist.pythonanywhere.com/next_time/';\n        fetch(cur_url)\n            .then((res) => res.text())\n            .then((data) => {\n                setTime(parseInt(data));\n            })}, []\n    );\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar className=\"appBar\" position=\"fixe\">\n        <Toolbar>\n            <Grid container spacing={1} style={{display: \"flex\", alignItems: \"center\"}}>\n\n                <Grid item xs={12} sm={4} >\n                    <img src={logo}/>\n                    <Button color=\"inherit\">\n                      <Typography variant=\"h6\" className={classes.title}>\n                          This SCP Does Not Exist\n                      </Typography>\n                  </Button>\n\n                </Grid>\n                \n                <Grid item xs={12} sm={4} >\n                    {/*<h1><CountDown epoch={parseInt(time)}/> </h1>*/}\n                    <MyCoundown time ={time}/>\n                </Grid>\n                <Grid item xs={0}  sm={1} > </Grid>\n                <Grid item xs={12}  sm={1} >\n                    <Link to={'/'}>\n                          <Button color=\"inherit\">\n                              {/*<Typography variant=\"h6\" className={classes.title}>*/}\n                              <strong >Poll</strong>\n                              {/*</Typography>*/}\n                          </Button>\n                        </Link>\n                </Grid>\n\n                <Grid item xs={12} sm={1}>\n                    <Link to={'/list'}>\n\n                  <Button color=\"inherit\">\n                      {/*<Typography variant=\"h6\" className={classes.title}>*/}\n                      <strong>Archives</strong>\n                      {/*</Typography>*/}\n                  </Button>\n                    </Link>\n                </Grid>\n                <Grid item xs={12}  sm={1}>\n                <Link to={'/about'}>\n                  <Button color=\"inherit\">\n                      {/*<Typography variant=\"h6\" className={classes.title}>*/}\n                      <strong>About</strong>\n                      {/*</Typography>*/}\n                  </Button>\n                </Link>\n                </Grid>\n            </Grid>\n\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import './App.css';\nimport CurrentPoll from './CurrentPoll.js'\nimport PastScp from './PastScp.js'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./customStyle.css\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./About\";\nimport ButtonAppBar from \"./ButtonAppBar/ButtonAppBar\";\n\nfunction App() {\n  return (  \n      <div className=\"App\">\n      <Router>\n        <ButtonAppBar />\n        <div className=\"appbody\">\n          <br/>\n          <Switch>\n            <Route path=\"/\" exact component={ CurrentPoll} />\n            <Route path=\"/list\" exact component={ PastScp } />\n            <Route path=\"/about\" exact component={ About } />\n            {/* Fix for 404 on refresh */}\n            <Route path=\"/*\" exact component={ CurrentPoll } />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}