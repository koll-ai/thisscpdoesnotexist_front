{"version":3,"sources":["PollItem.js","SubmitPromptDialog.js","CurrentPoll.js","Collapsible.js","AccordionDyn.js","PastScp.js","About.js","favicon.ico","ButtonAppBar.js","App.js","reportWebVitals.js","index.js"],"names":["PoolItem","props","state","n_votes","votes","hasClicked","n","fetch","toString","Math","floor","random","this","setState","Grid","item","xs","sm","md","Card","CardContent","Badge","bg","scpClass","prompt","CardActions","Button","size","onClick","handleClick","idx","disabled","Component","UserForm","useState","starting_value","value","setValue","type","name","fullWidth","maxlength","onChange","event","target","startsWith","onValueChange","ClassSelect","React","setScpClass","InputLabel","id","Select","labelId","onClassChange","MenuItem","FormDialog","open","setOpen","setPrompt","handleClose","variant","color","Dialog","maxWidth","onClose","DialogTitle","DialogContent","DialogContentText","curscp","console","log","DialogActions","url","substring","then","window","location","href","PollList","items","pollingItems","sort","a","b","map","PollItem","index","className","container","spacing","LastSCP","lastSCP","setLastSCP","useEffect","res","text","data","dangerouslySetInnerHTML","__html","CurrentPoll","setPollingItems","setCurscp","needupdate","setNeedUpdate","json","poll","Accordion","Item","Body","ANIMATED_EASING_PREFIXES","Collapsible","contentHandle","_handleRef","ref","_handleLayoutChange","contentHeight","nativeEvent","layout","height","animating","collapsed","measuring","measured","Animated","Value","collapsedHeight","prevProps","_componentDidUpdate","unmounted","_toggleCollapsed","callback","requestAnimationFrame","measure","getNode","x","y","width","_transitionToHeight","_measureContent","duration","easing","prefix","found","i","length","substr","toLowerCase","Easing","Error","_animation","stop","timing","useNativeDriver","toValue","start","onAnimationEnd","enablePointerEvents","renderChildrenCollapsed","style","overflow","contentStyle","position","opacity","align","transform","translateY","interpolate","inputRange","outputRange","shouldRenderChildren","View","pointerEvents","onLayout","undefined","children","defaultProps","COLLAPSIBLE_PROPS","AccordionDyn","_renderContainer","section","key","renderCollapsible","activeSections","sectionContainerStyle","expandFromBottom","sections","underlayColor","touchableProps","Touchable","touchableComponent","renderHeader","renderFooter","renderSectionTitle","includes","onPress","_toggleSection","accessibilityState","expanded","expandMultiple","updatedSections","filter","containerStyle","renderContent","renderAsFlatList","keyExtractor","restProps","viewProps","collapsibleProps","Object","keys","forEach","FlatList","extraData","nestedScrollEnabled","renderItem","TouchableHighlight","getScp","file","PastScp","multipleSelect","content","setSections","loadContent","j","desc","_","isActive","Header","class","getAccodionHeader","padding","str","list_scp","readString","pop","scp","push","bind","About","textAlign","backgroundColor","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","title","MyCoundown","date","time","daysInHours","ButtonAppBar","Date","now","setTime","parseInt","classes","AppBar","Toolbar","display","alignItems","src","logo","Typography","to","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5df9f3ca.chunk.js","sourcesContent":["import {Component} from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport \"./CurrentPoll.css\";\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nclass PoolItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            n_votes: props.votes,\r\n            hasClicked: false\r\n        };\r\n    }      \r\n\r\n    handleClick(n) {\r\n        fetch('https://thisscpdoesnotexist.pythonanywhere.com/vote/?n=' + n.toString()  + '&ip=' + Math.floor(Math.random() * 10000).toString());\r\n        this.setState(state => ({ n_votes: state.n_votes + 1, hasClicked: true}));\r\n    }\r\n\r\n    render() {\r\n        return(\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                  <Card>\r\n                      <CardContent>\r\n      \r\n                          <Badge bg={this.props.scpClass === \"Keter\" ? \"danger\" : this.props.scpClass === \"Euclid\" ? \"warning\" : this.props.scpClass === \"Thaumiel\" ? \"dark\" : \"success\" }>\r\n                              {/*<Typography className={classes.title} color=\"textSecondary\" gutterBottom>*/}\r\n                                  {this.props.scpClass}\r\n                              {/*</Typography>*/}\r\n                          </Badge>\r\n                          <br />\r\n                          <br/>\r\n                          {this.props.prompt}\r\n      \r\n                          <CardActions>\r\n                            {/* \r\n                            <button type=\"button\" size=\"small\" class=\"btn btn-secondary\" onClick={() => this.handleClick(this.props.idx)}>\r\n                                Vote <span class=\"badge badge-success\">{this.state.n_votes}</span>\r\n                            </button>\r\n                            */}\r\n\r\n                            <Button size=\"small\" onClick={() => this.handleClick(this.props.idx)} disabled={this.state.hasClicked}>\r\n                                  <strong>Vote &nbsp;</strong> {this.state.n_votes}\r\n                            </Button>\r\n                          </CardActions>\r\n                      </CardContent>\r\n                  </Card>\r\n              </Grid>\r\n          );\r\n    }\r\n}\r\n\r\nexport default PoolItem;","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nfunction UserForm(props){\n    // Champ de texte qui commencera toujours par la valeur de son prop starting_value\n    const [value, setValue] = useState(props.starting_value);\n    return  <textarea type=\"text\" name=\"user_prompt\" value={value} fullWidth maxlength={300}\n\n        onChange={event => {\n            if (event.target.value.startsWith(props.starting_value)){\n                setValue(event.target.value);\n                props.onValueChange(event);\n            }\n        }}\n    />;\n}\n\n\nfunction ClassSelect(props) {\n    const [scpClass, setScpClass] = React.useState(props.value);\n\n    const handleChange = (event) => {\n        setScpClass(event.target.value);\n        props.onClassChange(event);\n    };\n\n    return (\n        <div>\n            <InputLabel id=\"scpClassLabel\">Classe</InputLabel>\n                <Select\n                  labelId=\"SCP-Class\"\n                  id=\"scpClassSelect\"\n                  value={scpClass}\n                  onChange={handleChange}\n                >\n                  <MenuItem value={0}>Safe</MenuItem>\n                  <MenuItem value={1}>Euclide</MenuItem>\n                  <MenuItem value={2}>Keter</MenuItem>\n                  <MenuItem value={3}>Thomiel</MenuItem>\n            </Select>\n        </div>\n    )\n\n}\n\n\nexport default function FormDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const [prompt, setPrompt] = React.useState(\"\");\n  const [scpClass, setScpClass] = React.useState(0);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () =>{\n      let url = \"https://thisscpdoesnotexist.pythonanywhere.com/add_prompt/?prompt=\" + prompt.substring(11) + \"&class=\" + scpClass.toString() + \"&ip=\" + Math.floor(Math.random() * 100).toString()\n        fetch(url).then(value => window.location.href = '/');\n      // console.log(\"fetched\");\n\n      handleClose();\n\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n        <h5>Submit a prompt</h5>\n      </Button>\n      <Dialog fullWidth maxWidth=\"sm\" open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Submit your SCP idea !</DialogTitle>\n        <DialogContent>\n\n          <DialogContentText>\n            Describe your SCP :\n          </DialogContentText>\n            <UserForm starting_value={\"SCP-\" + props.curscp + \" is \"} onValueChange={(event) =>{\n                setPrompt(event.target.value);\n            }} />\n\n            <br/>\n            <br/>\n\n            <ClassSelect onClassChange={(event) => {\n                console.log(event.target.value);\n                setScpClass( event.target.value);\n            }}\n                         value={scpClass}\n            />\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" >\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","\nimport {useEffect, useState} from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport \"./CurrentPoll.css\";\nimport PollItem from './PollItem.js'\nimport {Accordion} from 'react-bootstrap';\n\nimport SubmitPromptDialog from './SubmitPromptDialog';\n\nfunction PollList(props){\n    const sorted = props.pollingItems.sort(((a, b) => b.votes - a.votes));    \n    \n    const items = sorted.map((item) => <PollItem prompt={item.prompt}\n                                    scpClass={item.scpClass}\n                                    votes={item.votes}\n                                    idx={item.index}\n    />);\n\n    return(\n        <div className=\"poll-list\">\n            <Grid container spacing={3}>\n                {items}\n            </Grid>\n        </div>\n    )\n}\n\nfunction LastSCP() {\n    const [lastSCP, setLastSCP] = useState(\"\");\n\n    useEffect(() => {\n        fetch(\"https://thisscpdoesnotexist.pythonanywhere.com/last_scp_desc/\")\n            .then((res) => res.text())\n            .then((data) =>{\n                setLastSCP(data);\n            })\n    }, []);\n\n    return (\n        <div dangerouslySetInnerHTML={{__html: lastSCP}}/>\n    );\n}\n\nfunction CurrentPoll() {\n\n    const [pollingItems, setPollingItems] = useState([]);\n    const [curscp, setCurscp] = useState(\"\");\n\n    const [needupdate, setNeedUpdate] = useState(0);\n\n    useEffect(() => {\n        let cur_url = 'https://thisscpdoesnotexist.pythonanywhere.com/get_poll/';\n        fetch(cur_url)\n            .then((res) => res.json())\n            .then((data) => {\n                setPollingItems(data.poll);\n            })\n\n        fetch(\"https://thisscpdoesnotexist.pythonanywhere.com/current_scp_number/\")\n            .then((res) => res.json())\n            .then((data) =>{\n                setCurscp(data);\n            })\n\n    }, [needupdate]);\n\n    return (\n    <div className=\"CurrentPoll\">\n        <strong>Current Poll :</strong>\n        <br/>\n        <br/>\n\n        <PollList pollingItems={pollingItems}/>\n        <br/>\n        <br/>\n        <SubmitPromptDialog className=\"openDialogBtn\" curscp ={curscp} needupdate={setNeedUpdate}/>\n        <br/>\n        <br/>\n\n        <strong>Last SCP :</strong>\n        <br/>\n        <br/>\n        <Accordion.Item>\n            <Accordion.Body>\n                <LastSCP/>\n            </Accordion.Body>\n        </Accordion.Item>\n    </div>\n  );\n}\n\nexport default CurrentPoll;\n","import React, { Component } from 'react';\nimport { Animated, Easing } from 'react-native';\n\nconst ANIMATED_EASING_PREFIXES = ['easeInOut', 'easeOut', 'easeIn'];\n\nexport default class Collapsible extends Component {\n  static defaultProps = {\n    align: 'top',\n    collapsed: true,\n    collapsedHeight: 0,\n    enablePointerEvents: false,\n    duration: 300,\n    easing: 'easeOutCubic',\n    onAnimationEnd: () => null,\n    renderChildrenCollapsed: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      measuring: false,\n      measured: false,\n      height: new Animated.Value(props.collapsedHeight),\n      contentHeight: 0,\n      animating: false,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.collapsed !== this.props.collapsed) {\n      this.setState({ measured: false }, () =>\n        this._componentDidUpdate(prevProps)\n      );\n    } else {\n      this._componentDidUpdate(prevProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  _componentDidUpdate(prevProps) {\n    if (prevProps.collapsed !== this.props.collapsed) {\n      this._toggleCollapsed(this.props.collapsed);\n    } else if (\n      this.props.collapsed &&\n      prevProps.collapsedHeight !== this.props.collapsedHeight\n    ) {\n      this.state.height.setValue(this.props.collapsedHeight);\n    }\n  }\n\n  contentHandle = null;\n\n  _handleRef = (ref) => {\n    this.contentHandle = ref;\n  };\n\n  _measureContent(callback) {\n    this.setState(\n      {\n        measuring: true,\n      },\n      () => {\n        requestAnimationFrame(() => {\n          if (!this.contentHandle) {\n            this.setState(\n              {\n                measuring: false,\n              },\n              () => callback(this.props.collapsedHeight)\n            );\n          } else {\n            let ref;\n            if (typeof this.contentHandle.measure === 'function') {\n              ref = this.contentHandle;\n            } else {\n              ref = this.contentHandle.getNode();\n            }\n            ref.measure((x, y, width, height) => {\n              this.setState(\n                {\n                  measuring: false,\n                  measured: true,\n                  contentHeight: height,\n                },\n                () => callback(height)\n              );\n            });\n          }\n        });\n      }\n    );\n  }\n\n  _toggleCollapsed(collapsed) {\n    if (collapsed) {\n      this._transitionToHeight(this.props.collapsedHeight);\n    } else if (!this.contentHandle) {\n      if (this.state.measured) {\n        this._transitionToHeight(this.state.contentHeight);\n      }\n      return;\n    } else {\n      this._measureContent((contentHeight) => {\n        this._transitionToHeight(contentHeight);\n      });\n    }\n  }\n\n  _transitionToHeight(height) {\n    const { duration } = this.props;\n    let easing = this.props.easing;\n    if (typeof easing === 'string') {\n      let prefix;\n      let found = false;\n      for (let i = 0; i < ANIMATED_EASING_PREFIXES.length; i++) {\n        prefix = ANIMATED_EASING_PREFIXES[i];\n        if (easing.substr(0, prefix.length) === prefix) {\n          easing =\n            easing.substr(prefix.length, 1).toLowerCase() +\n            easing.substr(prefix.length + 1);\n          prefix = prefix.substr(4, 1).toLowerCase() + prefix.substr(5);\n          easing = Easing[prefix](Easing[easing || 'ease']);\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        easing = Easing[easing];\n      }\n      if (!easing) {\n        throw new Error('Invalid easing type \"' + this.props.easing + '\"');\n      }\n    }\n\n    if (this._animation) {\n      this._animation.stop();\n    }\n    this.setState({ animating: true });\n    this._animation = Animated.timing(this.state.height, {\n      useNativeDriver: false,\n      toValue: height ? height : 0,\n      duration,\n      easing,\n    }).start(() => {\n      if (this.unmounted) {\n        return;\n      }\n      this.setState({ animating: false }, () => {\n        if (this.unmounted) {\n          return;\n        }\n        this.props.onAnimationEnd();\n      });\n    });\n  }\n\n  _handleLayoutChange = (event) => {\n    const contentHeight = event.nativeEvent.layout.height;\n    if (\n      this.state.animating ||\n      this.props.collapsed ||\n      this.state.measuring ||\n      this.state.contentHeight === contentHeight\n    ) {\n      return;\n    }\n\n    this.state.height.setValue(contentHeight);\n    this.setState({ contentHeight });\n  };\n\n  render() {\n    const {\n      collapsed,\n      enablePointerEvents,\n      renderChildrenCollapsed,\n    } = this.props;\n    const {\n      height,\n      contentHeight,\n      measuring,\n      measured,\n      animating,\n    } = this.state;\n    const hasKnownHeight = !measuring && (measured || collapsed);\n    const style = hasKnownHeight && {\n      overflow: 'hidden',\n      height: height,\n    };\n    const contentStyle = {};\n    if (measuring) {\n      contentStyle.position = 'absolute';\n      contentStyle.opacity = 0;\n    } else if (this.props.align === 'center') {\n      contentStyle.transform = [\n        {\n          translateY: height.interpolate({\n            inputRange: [0, contentHeight],\n            outputRange: [contentHeight / -2, 0],\n          }),\n        },\n      ];\n    } else if (this.props.align === 'bottom') {\n      contentStyle.transform = [\n        {\n          translateY: height.interpolate({\n            inputRange: [0, contentHeight],\n            outputRange: [-contentHeight, 0],\n          }),\n        },\n      ];\n    }\n    if (animating) {\n      contentStyle.height = contentHeight;\n    }\n    const shouldRenderChildren =\n      renderChildrenCollapsed ||\n      ((!collapsed || (collapsed && animating)) &&\n        (animating || measuring || measured));\n\n    return (\n      <Animated.View\n        style={style}\n        pointerEvents={!enablePointerEvents && collapsed ? 'none' : 'auto'}\n      >\n        <Animated.View\n          ref={this._handleRef}\n          style={[this.props.style, contentStyle]}\n          onLayout={this.state.animating ? undefined : this._handleLayoutChange}\n        >\n          {shouldRenderChildren && this.props.children}\n        </Animated.View>\n      </Animated.View>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { View, TouchableHighlight, FlatList } from 'react-native';\nimport Collapsible from './Collapsible';\n\nconst COLLAPSIBLE_PROPS = [\n  'align',\n  'collapsed',\n  'collapsedHeight',\n  'renderChildrenCollapsed',\n  'enablePointerEvents',\n  'duration',\n  'easing',\n  'style',\n  'onAnimationEnd',\n];\n\nexport default class AccordionDyn extends Component {\n  static defaultProps = {\n    underlayColor: 'black',\n    disabled: false,\n    expandFromBottom: false,\n    expandMultiple: false,\n    touchableComponent: TouchableHighlight,\n    keyExtractor: (item, index) => index,\n    renderSectionTitle: () => null,\n    onAnimationEnd: () => null,\n    sectionContainerStyle: {},\n    renderAsFlatList: false,\n  };\n\n  _toggleSection(section) {\n    if (!this.props.disabled) {\n      const { activeSections, expandMultiple, onChange } = this.props;\n\n      let updatedSections = [];\n\n      if (activeSections.includes(section)) {\n        updatedSections = activeSections.filter((a) => a !== section);\n      } else if (expandMultiple) {\n        updatedSections = [...activeSections, section];\n      } else {\n        updatedSections = [section];\n      }\n\n      if (onChange) {\n        onChange(updatedSections);\n      }\n    }\n  }\n\n  _renderContainer = (section, key, renderCollapsible) => {\n    const {\n      activeSections,\n      sectionContainerStyle,\n      expandFromBottom,\n      sections,\n      underlayColor,\n      touchableProps,\n      touchableComponent: Touchable,\n      renderHeader,\n      renderFooter,\n      renderSectionTitle,\n    } = this.props;\n    return (\n      <View key={key} style={sectionContainerStyle}>\n        {renderSectionTitle(section, key, activeSections.includes(key))}\n\n        {expandFromBottom && renderCollapsible(section, key)}\n\n        <Touchable\n          onPress={() => this._toggleSection(key)}\n          underlayColor={underlayColor}\n          {...touchableProps}\n          accessibilityState={{\n            expanded: activeSections.includes(key),\n          }}\n        >\n          {renderHeader(section, key, activeSections.includes(key), sections)}\n        </Touchable>\n\n        {!expandFromBottom && renderCollapsible(section, key)}\n\n        {renderFooter &&\n          renderFooter(section, key, activeSections.includes(key), sections)}\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      activeSections,\n      expandMultiple,\n      onChange,\n      containerStyle,\n      sectionContainerStyle,\n      expandFromBottom,\n      sections,\n      underlayColor,\n      touchableProps,\n      touchableComponent: Touchable,\n      onAnimationEnd,\n      renderContent,\n      renderHeader,\n      renderFooter,\n      renderSectionTitle,\n      disabled,\n      renderAsFlatList,\n      keyExtractor,\n      ...restProps\n    } = this.props;\n\n    const viewProps = {};\n    const collapsibleProps = {};\n\n    Object.keys(restProps).forEach((key) => {\n      if (COLLAPSIBLE_PROPS.includes(key)) {\n        collapsibleProps[key] = restProps[key];\n      } else {\n        viewProps[key] = restProps[key];\n      }\n    });\n\n    const renderCollapsible = (section, key) => (\n      <Collapsible\n        collapsed={!activeSections.includes(key)}\n        {...collapsibleProps}\n        onAnimationEnd={() => onAnimationEnd(section, key)}\n      >\n        {renderContent(section, key, activeSections.includes(key), sections)}\n      </Collapsible>\n    );\n\n    if (renderAsFlatList) {\n      return (\n        <FlatList\n          style={containerStyle}\n          data={sections}\n          extraData={activeSections}\n          nestedScrollEnabled={true}\n          keyExtractor={keyExtractor}\n          renderItem={({ item, index }) => {\n            const section = item;\n            const key = keyExtractor(item, index);\n            return this._renderContainer(section, key, renderCollapsible);\n          }}\n          {...viewProps}\n        />\n      );\n    }\n\n    return (\n      <View style={containerStyle} {...viewProps}>\n        {sections.map((section, index) => {\n          const key = keyExtractor(section, index);\n          return this._renderContainer(section, key, renderCollapsible);\n        })}\n      </View>\n    );\n  }\n}\n","import './App.css';\nimport React, { Component } from 'react';\nimport AccordionDyn from './AccordionDyn';\nimport {Accordion} from 'react-bootstrap';\nimport Badge from 'react-bootstrap/Badge';\nimport { readString } from 'react-papaparse'\n\nconst scp_url = \"https://raw.githubusercontent.com/thisscpdoesnotexist/SCP-GPT_db/master/\"\n\nfunction getScp(file) {\n    let cur_url = scp_url + file\n    return fetch(cur_url)\n        .then((res) => {return res.text()})\n        .then((data) => {return data});\n}\n\nexport default class PastScp extends Component {\n    state = {\n        activeSections: [],\n        collapsed: true,\n        multipleSelect: false,\n        content: []\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.getAccodionHeader().then((data) => {\n            this.setState({\n                content : data\n            })\n        });\n    }\n\n    setSections = (sections) => {\n        const {content} = this.state\n        this.loadContent(content, sections)\n        this.setState({\n          activeSections: sections.includes(undefined) ? [] : sections,\n        });\n    };\n\n    loadContent = (content, sections) => {\n        for(var i = 0; i < sections.length; i++) {\n            var j = sections[i];\n            getScp(content[j].url).then((data) => {\n                content[j].desc = data;\n                this.setState({content});\n            })\n        }\n    }\n    \n    renderHeader = (section, _, isActive) => {\n        return (\n            <Accordion.Header>\n                <strong>{section.prompt} &nbsp;</strong>\n                <Badge bg={section.class === \"Keter\" ? \"danger\" : section.class === \"Euclid\" ? \"warning\" : \"success\" }>\n                    {section.class}\n                </Badge>\n            </Accordion.Header>\n        );\n    };\n\n    renderContent(section, _, isActive) {\n        return (\n            <Accordion.Item>\n                <div style={{padding: '1.5em'}} dangerouslySetInnerHTML={{__html: section.desc}}/>\n            </Accordion.Item>\n        );\n    }\n\n    async getAccodionHeader() {\n        let str = await getScp(\"scp_list.csv\");\n        let list_scp = readString(str);\n\n        if(list_scp.data[list_scp.data.length - 1].length !== 3){\n            list_scp.data.pop();\n        }\n\n        let scp = [];\n        for(var i = 0; i < list_scp.data.length; i++) {\n            scp.push(\n                {\n                    prompt: list_scp.data[i][0],\n                    class: list_scp.data[i][1],\n                    url: list_scp.data[i][2],\n                    desc: 'Loading SCP...'\n                }\n            );\n        }\n\n        return scp;\n    }\n\n    render() {\n        return (\n            <div className=\"ListOfSCPs\">\n                <h2> List of Past SCPs</h2>\n\n                <br></br>\n\n                <AccordionDyn\n                    activeSections={this.state.activeSections}\n                    sections={this.state.content}\n                    expandMultiple={this.multipleSelect}\n                    renderHeader={this.renderHeader}\n                    renderContent={this.renderContent}\n                    onChange={this.setSections.bind(this)}\n                    renderAsFlatList={false}\n                />\n            </div>\n        );\n    }\n}","function About() {\n  return (\n    <div className=\"App\" style={{textAlign: 'left', backgroundColor:'white' }}>\n      <center><h1>About</h1></center>\n      \n      <br></br>\n      <br></br>\n\n      <h3>What is this website ?</h3>\n\n      <br></br>\n\n      This website uses GPT-3 by OpenAI to generate SCP.\n      Generative Pre-trained Transformer 3 (GPT-3) is an autoregressive language model\n      that uses deep learning to produce human-like text.\n      GPT-3's full version has a capacity of 175 billion machine learning parameters.\n      \n      <br></br>\n      <br></br>\n\n      <h3>Authors :</h3>\n\n        <br></br>\n\n        <ul>\n            <li>Ruben Gres</li>\n            <ul>\n                <li>\n                    <a href={\"https://www.linkedin.com/in/ruben-gres-484930158/\"}>LinkedIn</a>\n                </li>\n                <li>\n                    <a href={\"https://github.com/RubenGres\"}>GitHub</a>\n                </li>\n                <li>\n                    <a href={\"https://ohmlet.itch.io/\"}>Itch.io</a>\n                </li>\n            </ul>\n            <br/>\n            <li>Philippe Saadé</li>\n            <ul>\n                <li> Looking for a phd in Western Europe</li>\n                <li>\n                    <a href={\"https://www.linkedin.com/in/philippe-saad%C3%A9-26972b149/\"}>LinkedIn</a>\n                </li>\n                <li>\n                    <a href={\"https://github.com/PhilSad\"}>GitHub</a>\n                </li>\n            </ul>\n        </ul>\n    </div>\n  );\n}\n\nexport default About;\n","export default __webpack_public_path__ + \"static/media/favicon.9f756375.ico\";","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport {Link} from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Countdown from \"react-countdown\";\nimport logo from './favicon.ico'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n\nfunction MyCoundown(props){\n    return (\n      <h2>\n        <h1 ><Countdown date={props.time  } key={\"MyTimer\"} daysInHours={true}/></h1>\n      </h2>\n    )\n}\n\nexport default function ButtonAppBar() {\n    const [time, setTime] = useState(Date.now() + 3600 * 1000);\n\n    useEffect(() => {\n        let cur_url = 'https://thisscpdoesnotexist.pythonanywhere.com/next_time/';\n        fetch(cur_url)\n            .then((res) => res.text())\n            .then((data) => {\n                setTime(parseInt(data));\n            })}, []\n    );\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n            <Grid container spacing={1} style={{display: \"flex\", alignItems: \"center\"}}>\n\n                <Grid item xs={12} sm={4} >\n                    <img src={logo}/>\n                    <Button color=\"inherit\">\n                      <Typography variant=\"h6\" className={classes.title}>\n                          This SCP Does Not Exist\n                      </Typography>\n                  </Button>\n\n                </Grid>\n                \n                <Grid item xs={12} sm={4} >\n                    {/*<h1><CountDown epoch={parseInt(time)}/> </h1>*/}\n                    <MyCoundown time ={time}/>\n                </Grid>\n                <Grid item xs={0}  sm={1} > </Grid>\n                <Grid item xs={12}  sm={1} >\n                    <Link to={'/'}>\n                          <Button color=\"inherit\">\n                              {/*<Typography variant=\"h6\" className={classes.title}>*/}\n                              <strong >Poll</strong>\n                              {/*</Typography>*/}\n                          </Button>\n                        </Link>\n                </Grid>\n\n                <Grid item xs={12} sm={1}>\n                    <Link to={'/list'}>\n\n                  <Button color=\"inherit\">\n                      {/*<Typography variant=\"h6\" className={classes.title}>*/}\n                      <strong>Archives</strong>\n                      {/*</Typography>*/}\n                  </Button>\n                    </Link>\n                </Grid>\n                <Grid item xs={12}  sm={1}>\n                <Link to={'/about'}>\n                  <Button color=\"inherit\">\n                      {/*<Typography variant=\"h6\" className={classes.title}>*/}\n                      <strong>About</strong>\n                      {/*</Typography>*/}\n                  </Button>\n                </Link>\n                </Grid>\n            </Grid>\n\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import './App.css';\nimport CurrentPoll from './CurrentPoll.js'\nimport PastScp from './PastScp.js'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./customStyle.css\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./About\";\nimport ButtonAppBar from \"./ButtonAppBar\";\n\nfunction App() {\n  return (\n      <div className=\"App\">\n      <Router>\n        <ButtonAppBar />\n        <br/>\n        <Switch>\n          <Route path=\"/\" exact component={ CurrentPoll} />\n          <Route path=\"/list\" exact component={ PastScp } />\n          <Route path=\"/about\" exact component={ About } />\n          {/* Fix for 404 on refresh */}\n          <Route path=\"/*\" exact component={ CurrentPoll } />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}